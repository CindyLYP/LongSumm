{
  "name" : "17349212.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : null,
    "authors" : [ ],
    "emails" : [ ],
    "sections" : null,
    "references" : [ {
      "title" : "The evolution of virtual machine architecture",
      "author" : [ "J.P. Buzen", "U.O. Gagliardi" ],
      "venue" : "Proc. NCC",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 1973
    }, {
      "title" : "Virtual machine systems",
      "author" : [ "R.P. Goldberg" ],
      "venue" : "MIT Lincoln Laboratory Rept. No. MS-2686 (also 28L-0036),",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 1969
    }, {
      "title" : "Hardware requirements for virtual machine systems",
      "author" : [ "R.P. Goldberg" ],
      "venue" : "Proc. Hawaii hlternat. CoJ~lbrence  on Systems Sciences, Honolulu, Hawaii,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 1971
    }, {
      "title" : "Architectural principles for virtual computer systems",
      "author" : [ "R.P. Goldberg" ],
      "venue" : "Ph.D. Th., Div. of Eng. and Applied Physics, Harvard U.,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 1972
    }, {
      "title" : "Architecture of virtual machines",
      "author" : [ "R.P. Goldberg" ],
      "venue" : "Proc. NCC",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 1973
    }, {
      "title" : "IBM Virtual Machine Facility/370: Planning Guide, Pub",
      "author" : [ "IBM Corporation" ],
      "venue" : "No. GC20-1801-0,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : null,
      "year" : 1972
    }, {
      "title" : "Is supervisor-state necessary",
      "author" : [ "H.C. Lauer", "C.R. Snow" ],
      "venue" : "Proc. ACM AICA lnternat. Computing Symposium, Venice, Italy,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 1972
    }, {
      "title" : "A recursive virtual machine architecture",
      "author" : [ "H.C. Lauer", "D. Wyeth" ],
      "venue" : "Proc. ACM SIGARCH-SIGOPS Workshop on Virtual Computer Systems,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 1973
    }, {
      "title" : "A virtual machine timesharing system",
      "author" : [ "R.A. Meyer", "L.H. Seawright" ],
      "venue" : "IBM Systems J. 9,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 1970
    }, {
      "title" : "Verifiable secure operating system software",
      "author" : [ "G.J. Popek", "C. Kline" ],
      "venue" : "Proc. NCC",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 1974
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "There are currently a number of viewpoints suggesting what a virtual machine is, how it ought to be constructed, and what hardware and operating system implications result [1, 6, 7, 9, 12].",
      "startOffset" : 172,
      "endOffset" : 188
    }, {
      "referenceID" : 3,
      "context" : "There are currently a number of viewpoints suggesting what a virtual machine is, how it ought to be constructed, and what hardware and operating system implications result [1, 6, 7, 9, 12].",
      "startOffset" : 172,
      "endOffset" : 188
    }, {
      "referenceID" : 5,
      "context" : "There are currently a number of viewpoints suggesting what a virtual machine is, how it ought to be constructed, and what hardware and operating system implications result [1, 6, 7, 9, 12].",
      "startOffset" : 172,
      "endOffset" : 188
    }, {
      "referenceID" : 8,
      "context" : "There are currently a number of viewpoints suggesting what a virtual machine is, how it ought to be constructed, and what hardware and operating system implications result [1, 6, 7, 9, 12].",
      "startOffset" : 172,
      "endOffset" : 188
    }, {
      "referenceID" : 0,
      "context" : "E2[j] = EI[j], f o r 0 < j < q, E2[0] = (M,,P~,Rx) (M2, P2, R2) = E~[1].",
      "startOffset" : 68,
      "endOffset" : 71
    }, {
      "referenceID" : 0,
      "context" : "The effect of any privileged instruction (in general, any instruction) depends only on M, P, R, E[1] and E I R; that is, not on all of memory, but only on location 1 and that part specified by the relocation bounds register R.",
      "startOffset" : 97,
      "endOffset" : 100
    }, {
      "referenceID" : 3,
      "context" : "Is it possible for a virtual machine system to run under itself a copy of the VMM, and will that copy also exhibit all the properties of a VMM? If this procedure can be repeated until the resources of the system are consumed (since each control program takes up space), then the original machine is recursively virtualizable [2, 6].",
      "startOffset" : 325,
      "endOffset" : 331
    }, {
      "referenceID" : 2,
      "context" : "As remarked earlier, there exist very few third generation architectures which are virtualizable [5, 6].",
      "startOffset" : 97,
      "endOffset" : 103
    }, {
      "referenceID" : 3,
      "context" : "As remarked earlier, there exist very few third generation architectures which are virtualizable [5, 6].",
      "startOffset" : 97,
      "endOffset" : 103
    }, {
      "referenceID" : 3,
      "context" : "For that reason, we relax the definition to yield a related, more general, but less efficient form which we label a hybrid virtual machine system (HVM) [6].",
      "startOffset" : 152,
      "endOffset" : 155
    }, {
      "referenceID" : 1,
      "context" : "While previous authors [4, 5] have speculated about architectural characteristics required of third generation virtual machines, we have been able, using the formal approaches of this paper, to establish much more precisely the mechanisms to be used and the requirements to be met.",
      "startOffset" : 23,
      "endOffset" : 29
    }, {
      "referenceID" : 2,
      "context" : "While previous authors [4, 5] have speculated about architectural characteristics required of third generation virtual machines, we have been able, using the formal approaches of this paper, to establish much more precisely the mechanisms to be used and the requirements to be met.",
      "startOffset" : 23,
      "endOffset" : 29
    }, {
      "referenceID" : 9,
      "context" : "These results have been used at UCLA, for example, to evaluate the DEC PDP-11/45, and make modifications to it so that a virtual machine system could be constructed [13].",
      "startOffset" : 165,
      "endOffset" : 169
    }, {
      "referenceID" : 3,
      "context" : "m o r e complex memory mapping schemes can be added as straightforward extensions to the basic model and our major result extended [6, 12].",
      "startOffset" : 131,
      "endOffset" : 138
    }, {
      "referenceID" : 8,
      "context" : "m o r e complex memory mapping schemes can be added as straightforward extensions to the basic model and our major result extended [6, 12].",
      "startOffset" : 131,
      "endOffset" : 138
    }, {
      "referenceID" : 3,
      "context" : "Very recent work in computer systems architecture has included proposals for virtualizable architectures [2, 6, 8, 10, 11] which directly support virtual machines while avoiding the need for traditional VMM interpretive software overhead.",
      "startOffset" : 105,
      "endOffset" : 122
    }, {
      "referenceID" : 4,
      "context" : "Very recent work in computer systems architecture has included proposals for virtualizable architectures [2, 6, 8, 10, 11] which directly support virtual machines while avoiding the need for traditional VMM interpretive software overhead.",
      "startOffset" : 105,
      "endOffset" : 122
    }, {
      "referenceID" : 6,
      "context" : "Very recent work in computer systems architecture has included proposals for virtualizable architectures [2, 6, 8, 10, 11] which directly support virtual machines while avoiding the need for traditional VMM interpretive software overhead.",
      "startOffset" : 105,
      "endOffset" : 122
    }, {
      "referenceID" : 7,
      "context" : "Very recent work in computer systems architecture has included proposals for virtualizable architectures [2, 6, 8, 10, 11] which directly support virtual machines while avoiding the need for traditional VMM interpretive software overhead.",
      "startOffset" : 105,
      "endOffset" : 122
    } ],
    "year" : 2000,
    "abstractText" : "15 (Nov. 1967), ICR, U. of Chicago, Sec. IC. 20. Fabry, R.S. Preliminary description of a supervisor for a machine oriented around capabilities. ICR Quart. Rep. 18 (Aug. 1968), ICR, U. of Chicago, Sec. lB. 21. Fabry, R.S. List-structured addressing. Ph.D. Th., U. of Chicago, 1971. 22. Feustal, E.A. The Rice research computer--a tagged architecture. Proc. AFIPS 1972 SJCC, Vol. 40, AFIPS Press, Montvale, N.J. pp. 369-377. 23. Feustal, E.A. On time advantages of tagged architecture. IEEE Trans. on Computers C-22, 7 (July 1973), 644-656. 24. Graham, G.S., and Denning, P.J. Protection--principles and practice. Proc. AFIPS 1972 SJCC, Vol. 40, AFIPS Press, Montvale, N.J., pp. 417-429. 25. Halton, D. Hardware of the System 250 for communication control. Presented at the lnternat. Switching Syrup., Cambridge, Mass., June 6-9, 1972, 7 pp. 26. Hamer-Hodges, K.J. Fault resistance and recovery within System 250. Presented at I.C.C. Conf., Washington, D.C., Oct. 1972, 6 pp. 27. Iliffe, J.K. Basic maehhw principles. American Elsevier, New York, 1968. 28. Iliffe, J.K., and Jodeit, J.G. A dynamic storage allocation scheme. Comput. J. 5 (Oct. 1962), 200-209. 29. Jones, A.K. Protection structures. Ph.D. Th., CarnegieMellon U., 1973. 30. Lampson, B.W. On reliable and extendable operating systems. In Techniques in Software Engineering, NATO Science Committee Workshop Material, Vol. 11, Sept. 1969. 31. Lampson, B.W. Dynamic protection structures. Proc. AFIPS 1969 FJCC, Vol. 35, AFIPS Press, Montvale, N.J., pp. 27-38. 32. Lampson, B.W. Protection. Proc. 5th Ann. Princeton Conf., Princeton U., Mar. 1971, pp. 437-443. 33. LeClerc, J.Y. Memory structures for interactive computers. Project GENIE document No. 40.10.110, U. of California, Berkeley, 1966. 34. Needham, R.M. Protection systems and protection implementations. Proc. AFIPS 1972 FJCC, Vol. 41, AFIPS Press, Montvale, N.J., pp. 571-578. 35. Organick, E.I. Computer System Organization--the B5700 B6700 Series. Academic Press, New York, 1973. 36. Organick, E.I. Tile Multics System: An Examination (~/'lts Structure. MIT Press, Cambridge, Mass., 1972. 37. Saltzer, J.H. Traffic control in a multiplexed computer system. MAC-TR-30, Proj. MAC, MIT, Cambridge, Mass., 1966. 38. Schroeder, M.D. Performance of the GE-645 associative memory while Multics is in operation. Proc. Workshop on System Performance Evaluation, Cambridge, Mass., 1971, pp. 227-245. 39. Schroeder, M.D. Cooperation of mutually suspicious subsystems in a computer utility. Ph.D. Th., MIT, 1972. 40. Sevick, K.C., et al. Project SUE as a learning experience. Proc. AFIPS 1972 FJCC, Vol. 41, AFIPS Press, Montvale, N. J., pp. 331-339. 41. Shepherd, J. Principal design features of the multi-computer. (The Chicago Magic Number Computer). ICR Quart. Rep. 19 (Nov. 1968), 1CR, U. of Chicago, Sec. 1-C. 42. Sturgis, H.E. A postmortem of a time sharing system. Ph.D. Th., U. of California, Berkeley, 1973. 43. Wilkes, M.V. Time Sharing Computer Systems. 2nd ed., American Elsevier, New York, 1972. 44. Wilner, W.T. Design of the Burroughs BI700. Proc. AFIPS 1972 FJCC, Vol. 41, AFIPS Press, Montvale, N.J., pp. 489-497. 45. Wilner, W.T. Burroughs BI700 memory utilization. Proc. AFIPS 1972 FJCC, Vol. 41, AFIPS Press, Montvale, N.J., pp. 579586. 46. Wulf, W.A., et al. HYDRA: The kernel o f a multiprocessor operating system. Carnegie Mellon U., Comput. Sci. Dep. rep., June 1973. 47. Yngve, V.H. The Chicago Magic Number Computer. ICR Quart. Rep. 18 (Nov. 1968), ICR, U. of Chicago, Sec. 1-B. Formal Requirements for Virtualizable Third Generation Architectures",
    "creator" : null
  }
}