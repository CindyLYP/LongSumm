<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/cindy/tmp/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Flower Pollination Algorithm for Global Optimization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013-12-19">19 Dec 2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xin-She</forename><surname>Yang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Engineering</orgName>
								<orgName type="institution">University of Cambridge</orgName>
								<address>
									<addrLine>Trumpington Street</addrLine>
									<postCode>CB2 1PZ</postCode>
									<settlement>Cambridge</settlement>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Flower Pollination Algorithm for Global Optimization</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2013-12-19">19 Dec 2013</date>
						</imprint>
					</monogr>
					<idno type="arXiv">arXiv:1312.5673v1[math.OC]</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-01-31T12:45+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Xin-She Yang</term>
					<term>Flower pollination algorithm for global optimization</term>
					<term>in:</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Flower pollination is an intriguing process in the natural world. Its evolutionary characteristics can be used to design new optimization algorithms. In this paper, we propose a new algorithm, namely, flower pollination algorithm, inspired by the pollination process of flowers. We first use ten test functions to validate the new algorithm, and compare its performance with genetic algorithms and particle swarm optimization. Our simulation results show the flower algorithm is more efficient than both GA and PSO. We also use the flower algorithm to solve a nonlinear design benchmark, which shows the convergence rate is almost exponential.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Nature has been solving challenging problems over millions and billions of years, and many biological systems have evolved with intriguing and surprising efficiency in maximizing their evolutionary objectives such as reproduction. Based on the successfully characteristics of biological systems, many nature-inspired algorithms have been developed over the last few decades <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b19">20]</ref>. For example, genetic algorithms were based on the Darwinian evolution of biological systems <ref type="bibr" target="#b8">[9]</ref> and particle swarm optimization was based on the swarm behaviour of birds and fish <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12]</ref>, which bat algorithm was based on the echolocation behaviour of microbats <ref type="bibr" target="#b20">[21]</ref> and firefly algorithm was based on the flashing light patterns of tropic fireflies <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b18">19]</ref>. All these algorithms have been applied to a wide range of applications.</p><p>In many design applications in engineering and industry, we have to try to find the optimal solution to a given problem under highly complex constraints. Such constrained optimization problems are often highly nonlinear, to find the optimal solutions is often a very challenging task if it is not impossible. Most conventional optimization do not work well for problems with nonlinearity and multimodality. Current trend is to use nature-inspired metaheuristic algorithms to tackle such difficult problems, and it has been shown that metaheuristics are surprisingly very efficient. For this reason, the literature of metaheuristics has expanded tremendously in the last two decades <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b19">20]</ref>. Up to now, researchers have only use a very limited characateristics inspired by nature, and there is room for more algorithm development.</p><p>In this paper, we will propose a new algorithm based on the flower pollination process of flowering plants. We will first briefly review the main characteristics of flower pollination, and thus idealize these characteristics into four rules. We will then use them to develop a flower pollination algorithm (FPA), or the flower algorithm. Then, we validate it using a set of well-known test functions and design benchmark. We analyze the simulations and make comparison of its performance with genetic algorithm and particle swarm optimization. Finally, we discuss further topics for extending this algorithm.</p><p>From the biological evolution point of view, the objective of the flower pollination is the survival of the fittest and the optimal reproduction of plants in terms of numbers as well as most fittest. This is in fact an optimization process of plant species. All the above factors and processes of flower pollination interact so as to achieve optimal reproduction of the flowering plants. Therefore, this can inspire to design new optimization algorithm. The basic idea of flower pollination in the context of bees and clustering was investigated before <ref type="bibr" target="#b9">[10]</ref>, but in this paper, we will design a completely new optimization solely based on the flower pollination characteristics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Characteristics of Flower Pollination</head><p>It is estimated that there are over a quarter of a million types of flowering plants in Nature and that about 80% of all plant species are flowering species. It still remains partly a mystery how flowering plants came to dominate the landscape from Cretaceous period <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b21">22]</ref>. Flowering plant has been evolving for more than 125 million years and flowers have become so influential in evolution, we cannot image how the plant world would be without flowers. The main purpose of a a flower is ultimately reproduction via pollination. Flower pollination is typically associated with the transfer of pollen, and such transfer is often linked with pollinators such as insects, birds, bats and other animals. In fact, some flowers and insects have co-evolved into a very specialized flower-pollinator partnership. For example, some flowers can only attract and can only depend on a specific species of insects for successful pollination <ref type="bibr" target="#b6">[7]</ref>.</p><p>Pollination can take two major forms: abiotic and biotic. About 90% of flowering plants belong to biotic pollination, that is, pollen is transferred by a pollinator such as insects and animals. About 10% of pollination takes abiotic form which does not require any pollinators. Wind and diffusion in water help pollination of such flowering plants and grass is a good example <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b6">7]</ref>. Pollinators, or sometimes called pollen vectors, can be very diverse. It is estimate there are at least 200,000 variety of pollinators such as insects, bats and birds.</p><p>Honeybees are a good example of pollinator, and they can also developed the so-called flower constancy <ref type="bibr" target="#b2">[3]</ref>. That is, these pollinators tend to visit exclusive certain flower species while bypassing other flower species. Such flower constancy may have evolutionary advantages because this will maximize the transfer of flower pollen to the same or conspecific plants, and thus maximizing the reproduction of the same flower species. Such flower constancy may be advantageous for pollinators as well, because they can be sure that nectar supply is available with their limited memory and minimum cost of learning or exploring. Rather than focusing on some unpredictable but potentially more rewarding new flower species, flower constancy may require minimum investment cost and more likely guaranteed intake of nectar <ref type="bibr" target="#b16">[17]</ref>.</p><p>Pollination can be achieved by self-pollination or cross-pollination. Cross-pollination, or allogamy, means pollination can occur from pollen of a flower of a different plant, while self-pollination is the fertilization of one flower, such as peach flowers, from pollen of the same flower or different flowers of the same plant, which often occurs when there is no reliable pollinator available.</p><p>Biotic, cross-pollination may occur at long distance, and the pollinators such as bees, bats, birds and flies can fly a long distance, thus they can considered as the global pollination. In addition, bees and birds may behave as Lévy flight behaviour <ref type="bibr" target="#b12">[13]</ref>, with jump or fly distance steps obey a Lévy distribution. Furthermore, flower constancy can be used an increment step using the similarity or difference of two flowers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Flower Pollination Algorithm</head><p>Now we can idealize the above characteristics of pollination process, flower constancy and pollinator behaviour as the following rules:</p><p>1. Biotic and cross-pollination is considered as global pollination process with pollencarrying pollinators performing Lévy flights.</p><p>2. Abiotic and self-pollination are considered as local pollination.</p><p>3. Flower constancy can be considered as the reproduction probability is proportional to the similarity of two flowers involved.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Local pollination and global pollination is controlled by a switch probability</head><formula xml:id="formula_0">p ∈ [0, 1].</formula><p>Due to the physical proximity and other factors such as wind, local pollination can have a significant fraction p in the overall pollination activities.</p><p>Obviously, in reality, each plant can have multiple flowers, and each flower patch often release millions and even billions of pollen gametes. However, for simplicity, we also assume that each plant only has one flower, and each flower only produce one pollen gamete. Thus, there is no need to distinguish a pollen gamete, a flower, a plant or solution to a problem. This simplicity means a solution x i is equivalent to a flower and/or a pollen gamete. In future studies, we can easily extend to multiple pollen gametes for each flower and multiple flowers for multiobjective optimization problems.</p><p>From the above discussions and the idealized characteristics, we can design a flowerbased on algorithm, namely, flower pollination algorithm (FPA). There are two key steps in this algorithm, they are global pollination and local pollination.</p><p>In the global pollination step, flower pollens are carried by pollinators such as insects, and pollens can travel over a long distance because insects can often fly and move in a much longer range. This ensures the pollination and reproduction of the most fittest, and thus we represent the most fittest as g * . The first rule plus flower constancy can be represented mathematically as</p><formula xml:id="formula_1">x t+1 i = x t i + L(x t i − g * ),<label>(1)</label></formula><p>where x t i is the pollen i or solution vector x i at iteration t, and g * is the current best solution found among all solutions at the current generation/iteration. The parameter L is the strength of the pollination, which essentially is a step size. Since insects may move over a long distance with various distance steps, we can use a Lévy flight to mimic this characteristic efficiently <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b14">15]</ref>. That is, we draw L &gt; 0 from a Levy distribution</p><formula xml:id="formula_2">L ∼ λΓ(λ) sin(πλ/2) π 1 s 1+λ , (s ≫ s 0 &gt; 0).<label>(2)</label></formula><p>Flower Pollination Algorithm (or simply Flower Algorithm)   Here Γ(λ) is the standard gamma function, and this distribution is valid for large steps s &gt; 0. In all our simulations below, we have used λ = 1.5.</p><formula xml:id="formula_3">Objective min or max f (x), x = (x 1 , x 2 , ..., x d )</formula><formula xml:id="formula_4">= x t i + ǫ(x t j − x t k ) end if</formula><p>The local pollination (Rule 2) and flower constancy can be represented as</p><formula xml:id="formula_5">x t+1 i = x t i + ǫ(x t j − x t k ),<label>(3)</label></formula><p>where x t j and x t k are pollens from the different flowers of the same plant species. This essentially mimic the flower constancy in a limited neighborhood. Mathematically, if x t j and x t k comes from the same species or selected from the same population, this become a local random walk if we draw ǫ from a uniform distribution in [0,1].</p><p>Most flower pollination activities can occur at both local and global scale. In practice, adjacent flower patches or flowers in the not-so-far-away neighborhood are more likely to be pollinated by local flower pollens that those far away. For this, we use a switch probability (Rule 4) or proximity probability p to switch between common global pollination to intensive local pollination. To start with, we can use p = 0.5 as an initially value and then do a parametric study to find the most appropriate parameter range. From our simulations, we found that p = 0.8 works better for most applications.</p><p>The above two key steps plus the switch condition can be summarized in the pseudo code shown in <ref type="figure" target="#fig_0">Fig. 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Numerical Results</head><p>Any new optimization should be extensively validated and comparison with other algorithms. There are many test functions, at least over a hundred well-know test functions However, there is no agreed set of test functions for validating new algorithms, though there some review and literature <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b18">19]</ref>. In this paper, we will choose a diverse subset of such test functions to validate our proposed Flower Pollination Algorithm (FPA).</p><p>In addition, we will also compare the performance of our algorithm with that of genetic algorithms <ref type="bibr" target="#b7">[8]</ref> and particle swarm optimization <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12]</ref>. Furthermore, we will also apply FPA to solve a well-known pressure vessel design benchmark <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b5">6]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Test Functions</head><p>The Ackley function can be written as</p><formula xml:id="formula_6">f (x) = −20 exp − 1 5 1 d d i=1 x 2 i − exp 1 d d i=1 cos(2πx i ) + 20 + e,<label>(4)</label></formula><p>which has a global minimum f * = 0 at (0, 0, ..., 0). The simplest of De Jong's functions is the so-called sphere function</p><formula xml:id="formula_7">f (x) = n i=1 x 2 i , −5.12 ≤ x i ≤ 5.12,<label>(5)</label></formula><p>whose global minimum is obviously f * = 0 at (0, 0, ..., 0). This function is unimodal and convex. Easom's function</p><formula xml:id="formula_8">f (x) = − cos(x) cos(y) exp − (x − π) 2 + (y − π) 2 ,<label>(6)</label></formula><p>whose global minimum is f * = −1 at x * = (π, π) within −100 ≤ x, y ≤ 100. It has many local minima. Griewangk's function</p><formula xml:id="formula_9">f (x) = 1 4000 n i=1 x 2 i − n i=1 cos( x i √ i ) + 1, −600 ≤ x i ≤ 600,<label>(7)</label></formula><p>whose global minimum is f * = 0 at x * = (0, 0, ..., 0). This function is highly multimodal.</p><p>Michaelwicz's function</p><formula xml:id="formula_10">f (x) = − n i=1 sin(x i ) • sin( ix 2 i π ) 2m ,<label>(8)</label></formula><p>where m = 10, and 0 ≤ x i ≤ π for i = 1, 2, ..., n. In 2D case, we have</p><formula xml:id="formula_11">f (x, y) = − sin(x) sin 20 ( x 2 π ) − sin(y) sin 20 ( 2y 2 π ),<label>(9)</label></formula><p>where Rastrigin's function</p><formula xml:id="formula_12">f (x) = 10n + n i=1 x 2 i − 10 cos(2πx i ) , −5.12 ≤ x i ≤ 5.12,<label>(10)</label></formula><p>whose global minimum is f * = 0 at (0, 0, ..., 0). This function is highly multimodal.</p><p>Rosenbrock's function</p><formula xml:id="formula_13">f (x) = n−1 i=1 (x i − 1) 2 + 100(x i+1 − x 2 i ) 2 ,<label>(11)</label></formula><p>whose global minimum f * = 0 occurs at x * = (1, 1, ..., 1) in the domain −5 ≤ x i ≤ 5 where i = 1, 2, ..., n. In the 2D case, it is often written as</p><formula xml:id="formula_14">f (x, y) = (x − 1) 2 + 100(y − x 2 ) 2 ,<label>(12)</label></formula><p>which is often referred to as the banana function.</p><p>Schwefel's function</p><formula xml:id="formula_15">f (x) = − n i=1 x i sin |x i | , −500 ≤ x i ≤ 500,<label>(13)</label></formula><p>whose global minimum f * ≈ −418.9829n occurs at x i = 420.9687 where i = 1, 2, ..., n.</p><p>Yang's forest-like function <ref type="bibr" target="#b19">[20]</ref> f</p><formula xml:id="formula_16">(x) = d i=1 |x i | exp − d i=1 sin(x 2 i ) , −2π ≤ x i ≤ 2π,<label>(14)</label></formula><p>has a global minimum f * = 0 at (0, 0, ..., 0). Shubert's function</p><formula xml:id="formula_17">f (x) = n i=1 i cos i + (i + 1)x • n i=1 i cos i + (i + 1)y ,<label>(15)</label></formula><p>which has 18 global minima f * ≈ −186.7309 for n = 5 in the search domain −10 ≤ x, y ≤ 10. For the above ten test functions, each function can have varied dimensions; then there is an issue which dimensions should be used in the simulations. Research suggests that higher-dimensional problems tend to be more challenging, and a new algorithm should be tested against a wide range of functions in terms of function properties and dimensions. Therefore, we tend to focus on problems with higher dimensions.</p><p>In addition, we have used three algorithms to find their optimal solution with a given tolerance 10 −5 . The three algorithms are genetic algorithm (GA), particle swarm optimization (PSO) and the new flower pollination algorithm (FPA). For each algorithm, we have carried out 100 independent runs using a population size n = 25 and p = 0.8 for FPA, crossover probability 0.95 and mutation probability 0.05 for GA, and learning parameters 2 for PSO. The results are summarized in <ref type="table" target="#tab_2">Table 1</ref>. In the table, the results are provided as mean ± standard deviation (success rate). For example, 3341 ± 649(100%) means that mean number iterations is 3341 with one standard deviation of 649 and a success rate of 100%. The total number of function evaluations is n times the mean number of iterations. For example, the number of iterations is 3341 in the table, so the total number of function evaluations is 3341n = 3341 × 25 = 83525.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Design Optimization</head><p>Pressure vessels are literally everywhere such as champagne bottles and gas tanks. For a given volume and working pressure, the basic aim of designing a cylindrical vessel is to minimize the total cost. Typically, the design variables are the thickness d 1 of the head, the thickness d 2 of the body, the inner radius r, and the length L of the cylindrical section <ref type="bibr" target="#b1">[2]</ref>. This is a well-known test problem for optimization and it can be written as minimize f (x) = 0.6224d 1 rL + 1.7781d 2 r 2 + 3.1661d <ref type="bibr" target="#b1">2</ref> 1 L + 19.84d 2 1 r,</p><p>subject to the following constraints</p><formula xml:id="formula_19">g 1 (x) = −d 1 + 0.0193r ≤ 0 g 2 (x) = −d 2 + 0.00954r ≤ 0 g 3 (x) = −πr 2 L − 4π 3 r 3 + 1296000 ≤ 0 g 4 (x) = L − 240 ≤ 0. (17)</formula><p>The simple bounds are</p><formula xml:id="formula_20">0.0625 ≤ d 1 , d 2 ≤ 99 × 0.0625,<label>(18)</label></formula><p>and 10.0 ≤ r, L ≤ 200.0.</p><p>Recently, Cagnina et al (2008) used an efficient particle swarm optimiser to solve this problem and they found the best solution</p><formula xml:id="formula_22">f * ≈ 6059.714,<label>(20)</label></formula><p>at</p><p>x * ≈ (0.8125, 0.4375, 42.0984, 176.6366).</p><p>This means the lowest price is about $6059.71. Using the proposed flower pollination algorithm, we have easily found the same as the solution f * ≈ 6059.714 obtained by Cagnina et al <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b5">6]</ref>.</p><p>The current best solution can be stored during iterations. Then, we can calculate the errors D in terms of the difference between the current solution to the best mean solution  <ref type="figure" target="#fig_2">Figure 2</ref> shows the typical variations of D during iterations. We can also see that the proposed algorithm approaches the optimal solution exponentially (see <ref type="figure" target="#fig_2">Fig. 2</ref>).</p><p>Among the three methods, the proposed FPA obtained the best result and converged most quickly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Discussions</head><p>Flowering plants have evolved some interesting features of flower pollination, and we have successfully developed a new flower algorithm to mimic these characteristics. Our simulation results have shown that the the proposed flower pollination algorithm is very efficient and can outperform both genetic algorithm and particle swarm optimization. The convergence rate is essentially exponential as we have seen from the convergence comparison in the previous section.</p><p>The reasons that FPA is efficient can be twofold: long-distance pollinators and flower consistency. Pollinators such as insects can travel long distance, and thus they introduce the ability (into the algorithm) that they can escape any local landscape and subsequently explore larger search space. This acts as exploration moves. On the other hand, flower consistency ensure that the same species of the flowers (thus similar solutions) are chosen more frequently and thus guarantee the convergence more quickly. This step is essentially an exploitation step. The interplay and interaction of these key components and the selection of the best solution g * ensure that the algorithm is very efficient.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusions</head><p>In the present algorithm, for simplicity, we have assumed that each flower only produce one pollen gamete, this simplifies the implementation greatly. However, to assign each flower with multiple pollen gametes and each plant with multiple flowers can have some advantages for some applications such as image compression, multiobjective optimization, and graph colouring. This can form a topic for further research.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Pseudo code of the proposed Flower Pollination Algorithm (FPA).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>(x, y) ∈ [0, 5] × [0, 5]. This function has a global minimum f * ≈ −1.8013 at x * = (x * , y * ) = (2.20319, 1.57049).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Error variations and comparison of GA, PSO and FPA. after 40 independent runs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 :</head><label>1</label><figDesc>Comparison of algorithm performance in terms of number of iterations.</figDesc><table><row><cell>Functions/Algorithms</cell><cell>GA</cell><cell>PSO</cell><cell>FPA</cell></row><row><cell cols="4">Michalewicz (d=16) Rosenbrock (d=16) De Jong (d=256) 25412 ± 1237(100%) 17040 ± 1123(100%) 89325 ± 7914(95%) 6922 ± 537(98%) 55723 ± 8901(90%) 32756 ± 5325(98%) Schwefel (d=128) 227329 ± 7572(95%) 14522 ± 1275(97%) Ackley (d=128) 32720 ± 3327(90%) 23407 ± 4325(92%) Rastrigin 110523 ± 5199(77%) 79491 ± 3715(90%) 10840 ± 2689(100%) 3341 ± 649(100%) 5532 ± 1464(100%) 4245 ± 545(100%) 6851 ± 448(100%) 3357 ± 968(100%) Easom 19239 ± 3307(92%) 17273 ± 2929(90%) 4017 ± 982(100%) Griewank 70925 ± 7652(90%) 55970 ± 4223(92%) 4918 ± 1429(100%) Yang (d = 16) 27923 ± 3025(83%) 14116 ± 2949(90%) 4254 ± 1839(100%) Shubert(18 minima) 54077 ± 4997(89%) 23992 ± 3755(92%) 9271 ± 1758(100%)</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Another possible extension is to use design other schemes for flower constancy. At present, this constancy is realized by a simple formula. Other more exotic form may be useful to certain type of problem, though the exact improvement may need some extensive simulations.</p><p>Furthermore, it is possible to extend the flower algorithm to a discrete version so that it can solve combinatorial optimization problems. All these extensions will be very useful. We hope that this paper will inspire more active research in metaheuristics in the near future.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">A Connectionist Machine for Genetic Hillclimbing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>Ackley</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1987" />
			<publisher>Kluwer Academic Publishers</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Solving engineering optimization problems with the simple constrained particle swarm optimizer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">C</forename><surname>Cagnina</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>Esquivel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename><surname>Coello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Informatica</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="319" to="326" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Flower constancy, insect psychology, and plant evolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Chittka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Thomson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">M</forename><surname>Waser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Naturwissenschaften</title>
		<imprint>
			<biblScope unit="volume">86</biblScope>
			<biblScope unit="page" from="361" to="177" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Handbook of Test Problems in Local and Global Optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename><surname>Floudas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">M</forename><surname>Pardalos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">S</forename><surname>Adjiman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">R</forename><surname>Esposito</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><forename type="middle">H</forename><surname>Gumus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">T</forename><surname>Harding</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Klepeis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename><surname>Scheiger</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hedar</surname></persName>
		</author>
		<ptr target="http://www-optima.amp.i.kyoto-u.ac.jp/member/student/hedar/Hedarfiles/TestGOfiles/Page364.htm" />
		<title level="m">Test function web pages</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Cuckoo search algorithm: a metaheuristic approach to solve structural optimization problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Gandomi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><forename type="middle">S</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Alavi</surname></persName>
		</author>
		<idno type="DOI">articleDOI10.1007/s00366-011-0241-y</idno>
	</analytic>
	<monogr>
		<title level="j">Engineering with Computers</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Understanding Flowers and Flowering: An Integrated Approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">J</forename><surname>Glover</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
			<publisher>Oxford University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Genetic Algorithms in Search, Optimisation and Machine Learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>Goldberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<publisher>Addison Wesley</publisher>
			<pubPlace>Reading, Mass</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Adaptation in Natural and Artificial Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Holland</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975" />
			<publisher>Michigan Press</publisher>
			<pubPlace>Ann Anbor</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Swarm clustering based on flowers pollination by artificial bees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kazemian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ramezani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Lucas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Moshiri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Swarm Intelligence in Data Mining</title>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="191" to="202" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">C</forename><surname>Eberhart</surname></persName>
		</author>
		<title level="m">Particle swarm optimization. Proc. of IEEE International Conference on Neural Networks</title>
		<meeting><address><addrLine>Piscataway, NJ</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="1942" to="1948" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Eberhart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shi</surname></persName>
		</author>
		<title level="m">Swarm intelligence</title>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Lévy flights, non-local search and simulated annealing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Pavlyukevich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Computational Physics</title>
		<imprint>
			<biblScope unit="volume">226</biblScope>
			<biblScope unit="page" from="1830" to="1844" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<ptr target="http://en.wikipedia.org/wiki/Pollination" />
		<title level="m">Wikipedia article on pollination</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Free-flight odor tracking in Drosophila is consistent with an optimal intermittent scale-free search</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M</forename><surname>Reynolds</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Frye</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS One</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page">354</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">How flowers conquered the world</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Walker</surname></persName>
		</author>
		<ptr target="http://news.bbc.co.uk/earth/hi/earthnews/newsid8143000/8143095.stm" />
	</analytic>
	<monogr>
		<title level="j">BBC Earth News</title>
		<imprint>
			<date type="published" when="2009-07-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Flower constancy: definition, cause and measurement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">M</forename><surname>Waser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The American Naturalist</title>
		<imprint>
			<biblScope unit="volume">127</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="596" to="603" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><forename type="middle">S</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature-Inspired Metaheuristic Algorithms</title>
		<imprint>
			<date type="published" when="2008" />
			<publisher>Luniver Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Firefly algorithm, stochastic test functions and design optimisation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><forename type="middle">S</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Bio-Inspired Computation</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="78" to="84" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Engineering Optimization: An Introduction with Metaheuristic Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><forename type="middle">S</forename><surname>Yang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010" />
			<publisher>Wiley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">A new metaheuristic bat-inspired algorithm, in: Nature-Inspired Cooperative Strategies for Optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><forename type="middle">S</forename><surname>Yang</surname></persName>
		</author>
		<editor>Gonzalez J. R. et al.</editor>
		<imprint>
			<date type="published" when="2010" />
			<publisher>Springer</publisher>
			<biblScope unit="page" from="65" to="74" />
		</imprint>
	</monogr>
	<note>SCI 284</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Oily Fossils provide clues to the evolution of flowers</title>
		<ptr target="http://www.sciencedaily.com/releases/2001/04/010403071438.htm" />
	</analytic>
	<monogr>
		<title level="j">Science Daily</title>
		<imprint>
			<date type="published" when="2001-04-05" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
