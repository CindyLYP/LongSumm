{
  "name" : "65847395.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Density estimation using Real NVP",
    "authors" : [ "Laurent Dinh", "Jascha Sohl-Dickstein", "Samy Bengio" ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "The domain of representation learning has undergone tremendous advances due to improved supervised learning techniques. However, unsupervised learning has the potential to leverage large pools of unlabeled data available to us, and extend these advances to modalities that are otherwise impractical or impossible.\nOne principled approach to unsupervised learning is generative probabilistic modeling. Not only do generative probabilistic models have the ability to create novel content, they also have a wide range of reconstruction related applications including inpainting [54, 39, 52], denoising [3], colorization [63], and super-resolution [7].\nAs data of interest are generally highly-dimensional and highly structured, the challenge in this domain is building models that are powerful enough to capture its complexity yet still trainable. We address this challenge by introducing real-valued non-volume preserving (real NVP) transformations, a tractable yet expressive set of models for modeling high-dimensional data."
    }, {
      "heading" : "2 Related work",
      "text" : "Substantial work on probabilistic generative models has been focused on training models using maximum likelihood. When designing generative models, care needs to be taken to make both inference and learning tractable. These design choices are often expressed in terms of probabilistic graphical models. As these models rely on simple conditional distributions, the introduction of anonymous latent variables has been used to make these models more expressive.\nOccurrences of such models include probabilistic undirected graphs such as Restricted Boltzmann Machines [51] and Deep Boltzmann Machines [46]. These models were successfully trained by taking advantage of the conditional independence property of their bipartite structure to allow efficient exact\n∗Work was done when author was at Google Brain.\nar X\niv :1\n60 5.\n08 80\n3v 1\n[ cs\n.L G\n] 2\n7 M\nor approximate posterior inference on latent variables. However, because of the intractability of their associated marginal distribution, their training, evaluation and sampling procedures necessitate the use of approximations like Mean Field inference and Markov Chain Monte Carlo, whose convergence time for such complex models remains undetermined. Furthermore, these approximations can often hinder their performance [5].\nDirected graphical models rely on an ancestral sampling procedure, which is appealing both for its conceptual and computational simplicity. They lack, however, the conditional independence structure of undirected models, making exact and approximate posterior inference on latent variables cumbersome [49]. Recent advances in stochastic variational inference [22] and amortized inference [11, 36, 28, 42], allowed efficient approximate inference and learning of deep directed graphical models by maximizing a variational lower bound on the log-likelihood [38]. In particular, the variational autoencoder algorithm [28, 42] simultaneously learns a generative network, that maps gaussian latent variables z to samples x, and semantically meaningful features by exploiting the reparametrization trick [60]. Its success in leveraging recent advances in backpropagation [44, 32] in deep neural networks resulted in its adoption for several applications ranging from speech synthesis [10] to language modeling [6]. Still, the approximation in the inference process limits its ability to learn high dimensional deep representations, motivating recent work in improving approximate inference [35, 41, 48, 56, 8, 52].\nSuch approximations can be avoided altogether by abstaining from using latent variables. Autoregressive models [15, 30] can implement this strategy while typically retaining a great deal of flexibility. This class of algorithms tractably models the joint distribution by decomposing it into a product of conditionals using the probability chain rule according to an fixed ordering over dimensions, simplifying log-likelihood evaluation and sampling. Recent work in this line of research have successfully taken advantage of recent advances in recurrent networks [44], in particular longshort term memory [21], and residual networks [20, 19] in order to learn state-of-the-art generative image models [54, 39] and language models [26]. But the ordering of the dimensions, although often arbitrary, can be critical to the training of the model [59]. The sequential nature of this model limits its computational efficiency. For example, its sampling procedure is sequential and non-parallelizable. Additionally, there is no natural latent representation associated with autoregressive models, and they have not been shown to be useful for semi-supervised learning.\nGenerative adversarial networks [17] on the other hand can train any differentiable generative network by avoiding the maximum likelihood principle altogether. Instead, the generative network is associated with a discriminator network whose task is to distinguish between samples and real data. Rather than using an intractable log-likelihood, this discriminator network provides the training signal in an adversarial fashion. Successfully trained GAN models [17, 12, 40] can consistently generate sharp and realistically looking samples [31]. However, metrics that measure the diversity in the generated samples are currently intractable [55, 18]. Additionally, instability in their training process [40] requires careful hyperparameter tuning to avoid diverging behaviors.\nGiven the constraints of bijectivity, training a generative network g would be theoretically possible using the change of variable formula:\npX(x) = pZ(z) ∣∣∣∣det(∂g(z)∂z )∣∣∣∣−1 . (1)\nThis formula has been mentioned in several papers including the maximum likelihood formulation of independent components analysis (ICA) [4, 23], gaussianization [9] and deep density models [43, 14, 3]. However, as a naive application of this formula is in general impractical for highdimensional data, ICA practitioners preferred to use more tractable principle like ensemble learning [58]. As the existence proof of nonlinear ICA solutions [24] suggests, auto-regressive models can be seen as tractable instance of maximum likelihood nonlinear ICA, where the residual corresponds to the independent components."
    }, {
      "heading" : "3 Model definition",
      "text" : "In this paper, we will introduce a more flexible class of architectures that can tractably implement maximum likelihood on continuous data using this change of variable formula. Building on our previous work in [14], we will define a powerful class of bijective functions which will enable exact and tractable density evaluation and exact and tractable inference. These bijections will tie the sampling and inference processes, which will make exact sampling as efficient as exact inference. Moreover, the increased flexibility will allow us not to rely on a fixed form reconstruction cost such as square error [31, 40], and output sharper samples from trained models as a consequence. Also, this flexibility will help us leverage recent advances in batch normalization [25] and residual networks [19, 20]."
    }, {
      "heading" : "3.1 Change of variable formula",
      "text" : "Given a simple prior probability distribution pZ and a bijection f (with g = f−1), the change of variable formula is defined as\npX(x) = pZ ( f(x) ) ∣∣∣∣det(∂f(x)∂xT )∣∣∣∣ (2)\nlog (pX(x)) = log ( pZ ( f(x) )) + log (∣∣∣∣det(∂f(x)∂xT )∣∣∣∣) , (3)\nwhere ∂f(x) ∂xT is the Jacobian of f at x.\nExact samples from the resulting distribution can be generated by using the inverse transform sampling rule [13]. A sample z ∼ pZ is drawn in the latent space, and its inverse image x = f−1(z) = g(z) generates a sample in the original space. Computing the density on a point x would be done by computing the density on its image f(x) and computing the associated Jacobian determinant det ( ∂f(x) ∂xT ) . See also Figure 1."
    }, {
      "heading" : "3.2 Coupling layers",
      "text" : "Computing the Jacobian of functions with high-dimensional domain and codomain and computing the determinants of large matrices are in general computationally very expensive. This combined with the restriction to bijective functions makes Equation 2 appear impractical for modeling arbitrary distributions.\nAs we show however, by careful design of the function f , a bijective model can be learned which is both tractable and extremely flexible. As computing the Jacobian determinant of the transformation is crucial to effectively train using this principle, our work exploits the simple observation that the determinant of a triangular matrix can be efficiently computed as the product of its diagonal terms.\nWe will build a flexible and tractable bijective function by stacking a sequence of simple bijections. In each simple bijection, part of the input vector is updated using a function which is simple to invert, but which depends on the remainder of the input vector in a complex way. We refer to each of these simple bijections as an affine coupling layer. Given a D dimensional input x and d < D, the output y of an affine coupling layer follows the equations\ny1:d = x1:d (4) yd+1:D = xd+1:D exp ( l(x1:d) ) +m(x1:d), (5)\nwhere l and m are functions Rd 7→ RD−d and is the Hadamard product or element-wise product (see Figure 2(a))."
    }, {
      "heading" : "3.3 Properties",
      "text" : "The Jacobian of this transformation is\n∂y\n∂xT =\n[ Id 0\n∂yd+1:D ∂xT1:d\ndiag ( exp(l) ) ] , (6) where diag ( exp(l) ) is the diagonal matrix whose diagonal elements correspond to the vector\nexp ( l(x1:d) ) . Given the observation that this Jacobian is triangular, we can efficiently compute\nits determinant as exp( ∑ j l(x1:d)j). Since computing the Jacobian determinant of the coupling layer operation does not involve computing the Jacobian of l or m, these functions can be arbitrarily complex. We will make them deep convolutional neural networks. Note that the hidden layers of l and m will have more features than their input or output layers.\nAnother interesting property of these coupling layers in the context of defining probabilistic models is their invertibility. Indeed, computing the inverse is no more complex than the forward propagation (see Figure 2(b)), {\ny1:d = x1:d yd+1:D = xd+1:D exp ( l(x1:d) ) +m(x1:d)\n(7)\n⇔ { x1:d = y1:d xd+1:D = ( yd+1:D −m(y1:d) ) exp ( − l(y1:d)\n) . (8)"
    }, {
      "heading" : "3.4 Masked convolution",
      "text" : "Partitioning can be implemented using a binary mask b, and using the functional form for y,\ny = b x+ (1− b) ( x exp ( l(b x) ) +m(b x) ) . (9)\nWe use two partitionings that exploit the local correlation structure of images: spatial checkerboard patterns, and channel-wise masking (see Figure 3). The spatial checkerboard pattern mask has value 1 where the sum of spatial coordinates is odd, and 0 otherwise. The channel-wise mask b is 1 for the first half of the channel dimensions and 0 for the second half. For the models presented here, both l(·) and m(·) are rectified convolutional networks."
    }, {
      "heading" : "3.5 Combining coupling layers",
      "text" : "Although coupling layers can be powerful, their forward transformation leaves some components unchanged. This difficulty can be overcome by composing coupling layers in an alternating pattern, such that the components that are left unchanged in one coupling layer are updated in the next (see Figure 4(a))."
    }, {
      "heading" : "3.6 Multi-scale architecture",
      "text" : "We implement a multi-scale architecture using a squeezing operation: for each channel, it divides the image into subquares of shape 2× 2× c, then reshapes them into subsquares of shape 1× 1× 4c. The squeezing operation transforms an s × s × c tensor into an s2 × s 2 × 4c tensor (see Figure 3), effectively trading spatial size for number of channels.\nAt each scale, we combine several operations into a sequence: we first apply three coupling layers with alternating checkerboard masks, then perform a squeezing operation, and finally apply three more coupling layers with channel-wise masking. The channel-wise masking is chosen so that the resulting partitioning is not redundant with the previous checkerboard masking (see Figure 3). For the final scale, we only apply four coupling layers in with alternating checkerboard masks.\nPropagating a D dimensional vector through all the coupling layers would be cumbersome, in terms of computational and memory cost, and in terms of the number of parameters that would need to be trained. For this reason we follow the design choice of [50] and factor out half of the dimensions at\nregular intervals (see Equation 11). We can define this operation recursively (see Figure 4(b)),\nh(0) = x (10)\n(z(i+1), h(i+1)) = f (i+1)(h(i)) (11)\nz(L) = f (L)(h(L−1)) (12)\nz = (z(1), . . . , z(L)). (13)\nIn our experiments, for i < L. The sequence of coupling-squeezing-coupling operations described above is performed per layer when computing f (i) (Equation 11). At each layer, as the spatial resolution is reduced, the number of hidden layer features in l and m is doubled. All variables which have been factored out are concatenated to obtain the final transformed output (Equation 13).\nAs a consequence, the model must first Gaussianize layers which are factored out at an earlier layer. This follows a philosophy similar to guiding intermediate layers using intermediate classifiers [33], and having multiple layers of latent variables which represent different levels of abstraction [46, 42]."
    }, {
      "heading" : "3.7 Batch normalization",
      "text" : "To further improve the propagation of training signal, we use deep residual networks [19, 20] with batch normalization [25] and weight normalization [2, 47] in m and l. As described in Appendix E we introduce and use a novel variant of batch normalization which is based on a running average over recent minibatches, and is thus more robust when training with very small minibatches.\nWe also use apply batch normalization to the whole coupling layer output. The effects of batch normalization are easily included in the Jacobian computation, since it acts as a linear rescaling on each dimension. This form of batch normalization can be seen as similar to reward normalization in deep reinforcement learning [37]."
    }, {
      "heading" : "4 Experiments",
      "text" : ""
    }, {
      "heading" : "4.1 Procedure",
      "text" : "The algorithm described in Equation 2 shows how to learn distributions on unbounded space. In general, the data of interest have bounded magnitude. For examples, the pixel values of an image typically lie in [0, 256]D after application of the recommended jittering procedure [57, 55]. In order to reduce the impact of boundary effects, we instead model the density of logit(α+(1−α) x), where α is picked here as .05. We take into account this transformation when computing log-likelihood and bits per dimension. We also use horizontal flips for CIFAR-10, CelebA and LSUN.\nWe train our model on four natural image datasets: CIFAR-10 [29], Imagenet [45], Large-scale Scene Understanding (LSUN) [62], CelebFaces Attributes (CelebA) [34]. More specifically, we train on the downsampled to 32× 32 and 64× 64 versions of Imagenet [39]. For the LSUN dataset, we train on the bedroom, tower and church outdoor categories. The procedure for LSUN is the same as in [40]: we downsample the image so that the smallest side is 96 pixels and take random crops of 64× 64. For CelebA, we use the same procedure as in [31].\nWe use the multi-scale architecture described in Section 3.6 and use deep convolutional residual networks in the coupling layers with skip-connections as suggested by [39]. Our multi-scale architecture is repeated recursively until the input of the last recursion is a 4× 4× c tensor. For datasets of images of size 32× 32, we use 4 residual blocks with 32 hidden feature maps for the first coupling layers with checkerboard masking. Only 2 residual blocks are used for images of size 64× 64. We use a batch size of 64. For CIFAR-10, we use 8 residual blocks, 64 feature maps, and downscale only once. We optimize with ADAM [27] with default hyperparameters.\nWe set the prior pZ to be an isotropic unit norm Gaussian. However, any distribution could be used for pZ , including distributions that are also learned during training, such as from an auto-regressive model, or (with slight modifications to the training objective) a variational autoencoder."
    }, {
      "heading" : "4.2 Results",
      "text" : "We show in Table 1 that the number of bits per dimension, while not improving over the Pixel RNN [39] baseline, is competitive with other generative methods. As we notice that our performance increases with the number of parameters, larger models are likely to further improve performance. For CelebA and LSUN, the bits per dimension for the validation set was decreasing throughout training, so little overfitting is expected.\nWe show in Figure 5 samples generated from the model with training examples from the dataset for comparison. As mentioned in [55, 18], maximum likelihood is a principle that values diversity over sample quality in a limited capacity setting. As a result, our model outputs sometimes highly improbable samples as we can notice especially on CelebA. As opposed to variational autoencoders, the samples generated from our model look not only globally coherent but also sharp. Our hypothesis is that as opposed to these models, real NVP does not rely on fixed form reconstruction cost like an L2 norm which tends to reward capturing low frequency components more heavily than high frequency components. On Imagenet and LSUN, our model seems to have captured well the notion\nof background/foreground and lighting interactions such as luminosity and consistent light source direction for reflectance and shadows.\nWe also illustrate the smooth semantically consistent meaning of our latent variables. In the latent space, we define a manifold based on four validation examples z(1), z(2), z(3), z(4), and parametrized by two parameters φ and φ′ by,\nz = cos(φ) ( cos(φ′)z(1) + sin(φ ′)z(2) ) + sin(φ) ( cos(φ′)z(3) + sin(φ ′)z(4) ) . (14)\nWe project the resulting manifold back into the data space by computing g(z). Results are shown Figure 6. We observe that the model seems to have organized the latent space with a notion of meaning that goes well beyond pixel space interpolation. More visualization are shown in the Appendix."
    }, {
      "heading" : "5 Discussion and conclusion",
      "text" : "In this paper, we have defined a class of invertible functions with tractable Jacobian determinant, enabling exact and tractable log-likelihood evaluation, inference, and sampling. We have shown that this class of generative model achieves competitive performances, both in terms of sample quality and log-likelihood. Many avenues exist to further improve the functional form of the transformations, for instance by exploiting the latest advances in dilated convolutions [61] and residual networks architectures [53]\nThis paper presented a technique bridging the gap between auto-regressive models, variational autoencoders, and generative adversarial networks. Like auto-regressive models, it allows tractable and exact log-likelihood evaluation for training. It allows however a much more flexible functional form and, similar to variational autoencoders, it can define a meaningful latent space. Finally, like generative adversarial networks, our technique does not require the use of a fixed form reconstruction cost, and instead defines a cost in terms of higher level features, generating sharper images.\nNot only can this generative model be conditioned to create a structured output algorithm but, as the resulting class of invertible transformations can be treated as a probability distribution in a modular way, it can also be used to improve upon other probabilistic models like auto-regressive models and variational autoencoders. For variational autoencoders, these transformations could be used both to design more interesting reconstruction cost [31] and to augment stochastic inference models [41]. Probabilistic models in general can also benefit from batch normalization techniques as applied in this paper."
    }, {
      "heading" : "6 Acknowledgments",
      "text" : "The authors thank the developers of Tensorflow [1]. We thank Sherry Moore, David Andersen and Jon Shlens for their help in implementing the model. We thank Aäron van den Oord, Yann Dauphin, Kyle Kastner, Chelsea Finn, Ben Poole and David Warde-Farley for fruitful discussions. Finally, we thank Rafal Jozefowicz and George Dahl for their input on a draft of the paper."
    }, {
      "heading" : "A Samples",
      "text" : ""
    }, {
      "heading" : "B Manifold",
      "text" : ""
    }, {
      "heading" : "C Extrapolation",
      "text" : "Our convolutional architecture is only aware of the position of considered pixel through edge effects in colvolutions, therefore our model is similar to a stationary process. Inspired by the texture generation work by [16, 54] and extrapolation test with DCGAN [40], we also evaluate the statistics captured by our model by generating images twice or ten times as large as present in the dataset. As we can observe in the following figures, our model seems to successfully create a “texture” representation of the dataset while maintaining a spatial smoothness through the image."
    }, {
      "heading" : "D Latent variables semantic",
      "text" : "As in [18], we further try to grasp the semantic of our learned layers latent variables by doing ablation tests. We infer the latent variables and resample the lowest levels of latent variables from a standard gaussian, increasing the highest level affected by this resampling. As we can see in the following figures, the semantic of our latent space seems to be more on a graphic level rather than higher level concept. Although the heavy use of convolution improves learning by exploiting image prior knowledge, it is also likely to be responsible for this limitation."
    }, {
      "heading" : "E Batch normalization",
      "text" : "We further experimented with batch normalization by using a weighted average of a moving average of the layer statistics µ̃t, σ̃2t and the current batch batch statistics µ̂t, σ̂2t ,\nµ̃t+1 = ρµ̃t + (1− ρ)µ̂t (15) σ̃2t+1 = ρσ̃ 2 t + (1− ρ)σ̂2t , (16)\nwhere ρ is the momentum. When using µ̃t+1, σ̃2t+1, we only propagate gradient through the current batch statistics µ̂t, σ̂2t . We observe that using this lag helps the model train with very small minibatches.\nWe used batch normalization with a moving average for our results on CIFAR-10."
    } ],
    "references" : [ {
      "title" : "Tensorflow: Large-scale machine learning on heterogeneous distributed systems",
      "author" : [ "Martın Abadi", "Ashish Agarwal", "Paul Barham", "Eugene Brevdo", "Zhifeng Chen", "Craig Citro", "Greg S Corrado", "Andy Davis", "Jeffrey Dean", "Matthieu Devin" ],
      "venue" : "arXiv preprint arXiv:1603.04467,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2016
    }, {
      "title" : "Understanding symmetries in deep networks",
      "author" : [ "Vijay Badrinarayanan", "Bamdev Mishra", "Roberto Cipolla" ],
      "venue" : "arXiv preprint arXiv:1511.01029,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2015
    }, {
      "title" : "Density modeling of images using a generalized normalization transformation",
      "author" : [ "Johannes Ballé", "Valero Laparra", "Eero P Simoncelli" ],
      "venue" : "arXiv preprint arXiv:1511.06281,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2015
    }, {
      "title" : "An information-maximization approach to blind separation and blind deconvolution",
      "author" : [ "Anthony J Bell", "Terrence J Sejnowski" ],
      "venue" : "Neural computation,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 1995
    }, {
      "title" : "Stochastic gradient estimate variance in contrastive divergence and persistent contrastive divergence",
      "author" : [ "Mathias Berglund", "Tapani Raiko" ],
      "venue" : "arXiv preprint arXiv:1312.6002,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2013
    }, {
      "title" : "Generating sentences from a continuous space",
      "author" : [ "Samuel R Bowman", "Luke Vilnis", "Oriol Vinyals", "Andrew M Dai", "Rafal Jozefowicz", "Samy Bengio" ],
      "venue" : "arXiv preprint arXiv:1511.06349,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2015
    }, {
      "title" : "Super-resolution with deep convolutional sufficient statistics",
      "author" : [ "Joan Bruna", "Pablo Sprechmann", "Yann LeCun" ],
      "venue" : "arXiv preprint arXiv:1511.05666,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2015
    }, {
      "title" : "Importance weighted autoencoders",
      "author" : [ "Yuri Burda", "Roger Grosse", "Ruslan Salakhutdinov" ],
      "venue" : "arXiv preprint arXiv:1509.00519,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2015
    }, {
      "title" : "A Gopinath. Gaussianization",
      "author" : [ "Scott Shaobing Chen", "Ramesh" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2000
    }, {
      "title" : "A recurrent latent variable model for sequential data",
      "author" : [ "Junyoung Chung", "Kyle Kastner", "Laurent Dinh", "Kratarth Goel", "Aaron C Courville", "Yoshua Bengio" ],
      "venue" : "In Advances in neural information processing systems,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2015
    }, {
      "title" : "The helmholtz machine",
      "author" : [ "Peter Dayan", "Geoffrey E Hinton", "Radford M Neal", "Richard S Zemel" ],
      "venue" : "Neural computation,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 1995
    }, {
      "title" : "Deep generative image models using a laplacian pyramid of adversarial networks",
      "author" : [ "Emily L. Denton", "Soumith Chintala", "Arthur Szlam", "Rob Fergus" ],
      "venue" : "In Advances in Neural Information Processing Systems 28: Annual Conference on Neural Information Processing Systems",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2015
    }, {
      "title" : "Sample-based non-uniform random variate generation",
      "author" : [ "Luc Devroye" ],
      "venue" : "In Proceedings of the 18th conference on Winter simulation,",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 1986
    }, {
      "title" : "Nice: non-linear independent components estimation",
      "author" : [ "Laurent Dinh", "David Krueger", "Yoshua Bengio" ],
      "venue" : "arXiv preprint arXiv:1410.8516,",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 2014
    }, {
      "title" : "Graphical models for machine learning and digital communication",
      "author" : [ "Brendan J Frey" ],
      "venue" : "MIT press,",
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 1998
    }, {
      "title" : "Texture synthesis using convolutional neural networks. In Advances in Neural Information Processing Systems",
      "author" : [ "Leon A. Gatys", "Alexander S. Ecker", "Matthias Bethge" ],
      "venue" : "Annual Conference on Neural Information Processing Systems",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2015
    }, {
      "title" : "Generative adversarial nets",
      "author" : [ "Ian J. Goodfellow", "Jean Pouget-Abadie", "Mehdi Mirza", "Bing Xu", "David Warde-Farley", "Sherjil Ozair", "Aaron C. Courville", "Yoshua Bengio" ],
      "venue" : "In Advances in Neural Information Processing Systems 27: Annual Conference on Neural Information Processing Systems",
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 2014
    }, {
      "title" : "Towards conceptual compression",
      "author" : [ "Karol Gregor", "Frederic Besse", "Danilo Jimenez Rezende", "Ivo Danihelka", "Daan Wierstra" ],
      "venue" : "arXiv preprint arXiv:1604.08772,",
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2016
    }, {
      "title" : "Deep residual learning for image recognition",
      "author" : [ "Kaiming He", "Xiangyu Zhang", "Shaoqing Ren", "Jian Sun" ],
      "venue" : "CoRR, abs/1512.03385,",
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 2015
    }, {
      "title" : "Identity mappings in deep residual networks",
      "author" : [ "Kaiming He", "Xiangyu Zhang", "Shaoqing Ren", "Jian Sun" ],
      "venue" : null,
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2016
    }, {
      "title" : "Long short-term memory",
      "author" : [ "Sepp Hochreiter", "Jürgen Schmidhuber" ],
      "venue" : "Neural Computation,",
      "citeRegEx" : "21",
      "shortCiteRegEx" : "21",
      "year" : 1997
    }, {
      "title" : "Stochastic variational inference",
      "author" : [ "Matthew D Hoffman", "David M Blei", "Chong Wang", "John Paisley" ],
      "venue" : "The Journal of Machine Learning Research,",
      "citeRegEx" : "22",
      "shortCiteRegEx" : "22",
      "year" : 2013
    }, {
      "title" : "Independent component analysis, volume 46",
      "author" : [ "Aapo Hyvärinen", "Juha Karhunen", "Erkki Oja" ],
      "venue" : null,
      "citeRegEx" : "23",
      "shortCiteRegEx" : "23",
      "year" : 2004
    }, {
      "title" : "Nonlinear independent component analysis: Existence and uniqueness results",
      "author" : [ "Aapo Hyvärinen", "Petteri Pajunen" ],
      "venue" : "Neural Networks,",
      "citeRegEx" : "24",
      "shortCiteRegEx" : "24",
      "year" : 1999
    }, {
      "title" : "Batch normalization: Accelerating deep network training by reducing internal covariate shift",
      "author" : [ "Sergey Ioffe", "Christian Szegedy" ],
      "venue" : "arXiv preprint arXiv:1502.03167,",
      "citeRegEx" : "25",
      "shortCiteRegEx" : "25",
      "year" : 2015
    }, {
      "title" : "Exploring the limits of language modeling",
      "author" : [ "Rafal Józefowicz", "Oriol Vinyals", "Mike Schuster", "Noam Shazeer", "Yonghui Wu" ],
      "venue" : null,
      "citeRegEx" : "26",
      "shortCiteRegEx" : "26",
      "year" : 2016
    }, {
      "title" : "Adam: A method for stochastic optimization",
      "author" : [ "Diederik Kingma", "Jimmy Ba" ],
      "venue" : "arXiv preprint arXiv:1412.6980,",
      "citeRegEx" : "27",
      "shortCiteRegEx" : "27",
      "year" : 2014
    }, {
      "title" : "Auto-encoding variational bayes",
      "author" : [ "Diederik P Kingma", "Max Welling" ],
      "venue" : "arXiv preprint arXiv:1312.6114,",
      "citeRegEx" : "28",
      "shortCiteRegEx" : "28",
      "year" : 2013
    }, {
      "title" : "Learning multiple layers of features from tiny",
      "author" : [ "Alex Krizhevsky", "Geoffrey Hinton" ],
      "venue" : null,
      "citeRegEx" : "29",
      "shortCiteRegEx" : "29",
      "year" : 2009
    }, {
      "title" : "The neural autoregressive distribution estimator",
      "author" : [ "Hugo Larochelle", "Iain Murray" ],
      "venue" : "In AISTATS,",
      "citeRegEx" : "30",
      "shortCiteRegEx" : "30",
      "year" : 2011
    }, {
      "title" : "Autoencoding beyond pixels using a learned similarity",
      "author" : [ "Anders Boesen Lindbo Larsen", "Søren Kaae Sønderby", "Ole Winther" ],
      "venue" : "metric. CoRR,",
      "citeRegEx" : "31",
      "shortCiteRegEx" : "31",
      "year" : 2015
    }, {
      "title" : "Efficient backprop",
      "author" : [ "Yann A LeCun", "Léon Bottou", "Genevieve B Orr", "Klaus-Robert Müller" ],
      "venue" : "In Neural networks: Tricks of the trade,",
      "citeRegEx" : "32",
      "shortCiteRegEx" : "32",
      "year" : 2012
    }, {
      "title" : "Deep learning face attributes in the wild",
      "author" : [ "Ziwei Liu", "Ping Luo", "Xiaogang Wang", "Xiaoou Tang" ],
      "venue" : "In Proceedings of International Conference on Computer Vision (ICCV),",
      "citeRegEx" : "34",
      "shortCiteRegEx" : "34",
      "year" : 2015
    }, {
      "title" : "Auxiliary deep generative models",
      "author" : [ "Lars Maaløe", "Casper Kaae Sønderby", "Søren Kaae Sønderby", "Ole Winther" ],
      "venue" : "arXiv preprint arXiv:1602.05473,",
      "citeRegEx" : "35",
      "shortCiteRegEx" : "35",
      "year" : 2016
    }, {
      "title" : "Neural variational inference and learning in belief networks",
      "author" : [ "Andriy Mnih", "Karol Gregor" ],
      "venue" : "arXiv preprint arXiv:1402.0030,",
      "citeRegEx" : "36",
      "shortCiteRegEx" : "36",
      "year" : 2014
    }, {
      "title" : "Human-level control through deep reinforcement learning",
      "author" : [ "Volodymyr Mnih", "Koray Kavukcuoglu", "David Silver", "Andrei A Rusu", "Joel Veness", "Marc G Bellemare", "Alex Graves", "Martin Riedmiller", "Andreas K Fidjeland", "Georg Ostrovski" ],
      "venue" : "Nature, 518(7540):529–533,",
      "citeRegEx" : "37",
      "shortCiteRegEx" : "37",
      "year" : 2015
    }, {
      "title" : "A view of the em algorithm that justifies incremental, sparse, and other variants",
      "author" : [ "Radford M Neal", "Geoffrey E Hinton" ],
      "venue" : "In Learning in graphical models,",
      "citeRegEx" : "38",
      "shortCiteRegEx" : "38",
      "year" : 1998
    }, {
      "title" : "Pixel recurrent neural networks",
      "author" : [ "Aaron van den Oord", "Nal Kalchbrenner", "Koray Kavukcuoglu" ],
      "venue" : "arXiv preprint arXiv:1601.06759,",
      "citeRegEx" : "39",
      "shortCiteRegEx" : "39",
      "year" : 2016
    }, {
      "title" : "Unsupervised representation learning with deep convolutional generative adversarial networks",
      "author" : [ "Alec Radford", "Luke Metz", "Soumith Chintala" ],
      "venue" : "CoRR, abs/1511.06434,",
      "citeRegEx" : "40",
      "shortCiteRegEx" : "40",
      "year" : 2015
    }, {
      "title" : "Variational inference with normalizing flows",
      "author" : [ "Danilo Jimenez Rezende", "Shakir Mohamed" ],
      "venue" : "arXiv preprint arXiv:1505.05770,",
      "citeRegEx" : "41",
      "shortCiteRegEx" : "41",
      "year" : 2015
    }, {
      "title" : "Stochastic backpropagation and approximate inference in deep generative models",
      "author" : [ "Danilo Jimenez Rezende", "Shakir Mohamed", "Daan Wierstra" ],
      "venue" : "arXiv preprint arXiv:1401.4082,",
      "citeRegEx" : "42",
      "shortCiteRegEx" : "42",
      "year" : 2014
    }, {
      "title" : "High-dimensional probability estimation with deep density models",
      "author" : [ "Oren Rippel", "Ryan Prescott Adams" ],
      "venue" : "arXiv preprint arXiv:1302.5125,",
      "citeRegEx" : "43",
      "shortCiteRegEx" : "43",
      "year" : 2013
    }, {
      "title" : "Learning representations by backpropagating errors",
      "author" : [ "David E Rumelhart", "Geoffrey E Hinton", "Ronald J Williams" ],
      "venue" : "Cognitive modeling,",
      "citeRegEx" : "44",
      "shortCiteRegEx" : "44",
      "year" : 1988
    }, {
      "title" : "Imagenet large scale visual recognition challenge",
      "author" : [ "Olga Russakovsky", "Jia Deng", "Hao Su", "Jonathan Krause", "Sanjeev Satheesh", "Sean Ma", "Zhiheng Huang", "Andrej Karpathy", "Aditya Khosla", "Michael Bernstein" ],
      "venue" : "International Journal of Computer Vision,",
      "citeRegEx" : "45",
      "shortCiteRegEx" : "45",
      "year" : 2015
    }, {
      "title" : "Deep boltzmann machines",
      "author" : [ "Ruslan Salakhutdinov", "Geoffrey E Hinton" ],
      "venue" : "In International conference on artificial intelligence and statistics,",
      "citeRegEx" : "46",
      "shortCiteRegEx" : "46",
      "year" : 2009
    }, {
      "title" : "Weight normalization: A simple reparameterization to accelerate training of deep neural networks",
      "author" : [ "Tim Salimans", "Diederik P Kingma" ],
      "venue" : "arXiv preprint arXiv:1602.07868,",
      "citeRegEx" : "47",
      "shortCiteRegEx" : "47",
      "year" : 2016
    }, {
      "title" : "Markov chain monte carlo and variational inference: Bridging the gap",
      "author" : [ "Tim Salimans", "Diederik P Kingma", "Max Welling" ],
      "venue" : "arXiv preprint arXiv:1410.6460,",
      "citeRegEx" : "48",
      "shortCiteRegEx" : "48",
      "year" : 2014
    }, {
      "title" : "Mean field theory for sigmoid belief networks",
      "author" : [ "Lawrence K Saul", "Tommi Jaakkola", "Michael I Jordan" ],
      "venue" : "Journal of artificial intelligence research,",
      "citeRegEx" : "49",
      "shortCiteRegEx" : "49",
      "year" : 1996
    }, {
      "title" : "Very deep convolutional networks for large-scale image recognition",
      "author" : [ "Karen Simonyan", "Andrew Zisserman" ],
      "venue" : "arXiv preprint arXiv:1409.1556,",
      "citeRegEx" : "50",
      "shortCiteRegEx" : "50",
      "year" : 2014
    }, {
      "title" : "Information processing in dynamical systems: Foundations of harmony theory",
      "author" : [ "Paul Smolensky" ],
      "venue" : "Technical report, DTIC Document,",
      "citeRegEx" : "51",
      "shortCiteRegEx" : "51",
      "year" : 1986
    }, {
      "title" : "Deep unsupervised learning using nonequilibrium thermodynamics",
      "author" : [ "Jascha Sohl-Dickstein", "Eric A. Weiss", "Niru Maheswaranathan", "Surya Ganguli" ],
      "venue" : "In Proceedings of the 32nd International Conference on Machine Learning, ICML 2015,",
      "citeRegEx" : "52",
      "shortCiteRegEx" : "52",
      "year" : 2015
    }, {
      "title" : "Resnet in resnet",
      "author" : [ "Sasha Targ", "Diogo Almeida", "Kevin Lyman" ],
      "venue" : "Generalizing residual architectures. CoRR,",
      "citeRegEx" : "53",
      "shortCiteRegEx" : "53",
      "year" : 2016
    }, {
      "title" : "Generative image modeling using spatial lstms",
      "author" : [ "Lucas Theis", "Matthias Bethge" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "54",
      "shortCiteRegEx" : "54",
      "year" : 2015
    }, {
      "title" : "A note on the evaluation of generative models",
      "author" : [ "Lucas Theis", "Aäron Van Den Oord", "Matthias Bethge" ],
      "venue" : "CoRR, abs/1511.01844,",
      "citeRegEx" : "55",
      "shortCiteRegEx" : "55",
      "year" : 2015
    }, {
      "title" : "Variational gaussian process",
      "author" : [ "Dustin Tran", "Rajesh Ranganath", "David M Blei" ],
      "venue" : "arXiv preprint arXiv:1511.06499,",
      "citeRegEx" : "56",
      "shortCiteRegEx" : "56",
      "year" : 2015
    }, {
      "title" : "Rnade: The real-valued neural autoregressive densityestimator",
      "author" : [ "Benigno Uria", "Iain Murray", "Hugo Larochelle" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "57",
      "shortCiteRegEx" : "57",
      "year" : 2013
    }, {
      "title" : "An unsupervised ensemble learning method for nonlinear dynamic state-space models",
      "author" : [ "Harri Valpola", "Juha Karhunen" ],
      "venue" : "Neural computation,",
      "citeRegEx" : "58",
      "shortCiteRegEx" : "58",
      "year" : 2002
    }, {
      "title" : "Order matters: Sequence to sequence for sets",
      "author" : [ "Oriol Vinyals", "Samy Bengio", "Manjunath Kudlur" ],
      "venue" : "arXiv preprint arXiv:1511.06391,",
      "citeRegEx" : "59",
      "shortCiteRegEx" : "59",
      "year" : 2015
    }, {
      "title" : "Simple statistical gradient-following algorithms for connectionist reinforcement learning",
      "author" : [ "Ronald J Williams" ],
      "venue" : "Machine learning,",
      "citeRegEx" : "60",
      "shortCiteRegEx" : "60",
      "year" : 1992
    }, {
      "title" : "Multi-scale context aggregation by dilated convolutions",
      "author" : [ "Fisher Yu", "Vladlen Koltun" ],
      "venue" : "arXiv preprint arXiv:1511.07122,",
      "citeRegEx" : "61",
      "shortCiteRegEx" : "61",
      "year" : 2015
    }, {
      "title" : "Construction of a large-scale image dataset using deep learning with humans in the loop",
      "author" : [ "Fisher Yu", "Yinda Zhang", "Shuran Song", "Ari Seff", "Jianxiong Xiao" ],
      "venue" : "arXiv preprint arXiv:1506.03365,",
      "citeRegEx" : "62",
      "shortCiteRegEx" : "62",
      "year" : 2015
    } ],
    "referenceMentions" : [ {
      "referenceID" : 52,
      "context" : "Not only do generative probabilistic models have the ability to create novel content, they also have a wide range of reconstruction related applications including inpainting [54, 39, 52], denoising [3], colorization [63], and super-resolution [7].",
      "startOffset" : 174,
      "endOffset" : 186
    }, {
      "referenceID" : 37,
      "context" : "Not only do generative probabilistic models have the ability to create novel content, they also have a wide range of reconstruction related applications including inpainting [54, 39, 52], denoising [3], colorization [63], and super-resolution [7].",
      "startOffset" : 174,
      "endOffset" : 186
    }, {
      "referenceID" : 50,
      "context" : "Not only do generative probabilistic models have the ability to create novel content, they also have a wide range of reconstruction related applications including inpainting [54, 39, 52], denoising [3], colorization [63], and super-resolution [7].",
      "startOffset" : 174,
      "endOffset" : 186
    }, {
      "referenceID" : 2,
      "context" : "Not only do generative probabilistic models have the ability to create novel content, they also have a wide range of reconstruction related applications including inpainting [54, 39, 52], denoising [3], colorization [63], and super-resolution [7].",
      "startOffset" : 198,
      "endOffset" : 201
    }, {
      "referenceID" : 6,
      "context" : "Not only do generative probabilistic models have the ability to create novel content, they also have a wide range of reconstruction related applications including inpainting [54, 39, 52], denoising [3], colorization [63], and super-resolution [7].",
      "startOffset" : 243,
      "endOffset" : 246
    }, {
      "referenceID" : 49,
      "context" : "Occurrences of such models include probabilistic undirected graphs such as Restricted Boltzmann Machines [51] and Deep Boltzmann Machines [46].",
      "startOffset" : 105,
      "endOffset" : 109
    }, {
      "referenceID" : 44,
      "context" : "Occurrences of such models include probabilistic undirected graphs such as Restricted Boltzmann Machines [51] and Deep Boltzmann Machines [46].",
      "startOffset" : 138,
      "endOffset" : 142
    }, {
      "referenceID" : 4,
      "context" : "Furthermore, these approximations can often hinder their performance [5].",
      "startOffset" : 69,
      "endOffset" : 72
    }, {
      "referenceID" : 47,
      "context" : "They lack, however, the conditional independence structure of undirected models, making exact and approximate posterior inference on latent variables cumbersome [49].",
      "startOffset" : 161,
      "endOffset" : 165
    }, {
      "referenceID" : 21,
      "context" : "Recent advances in stochastic variational inference [22] and amortized inference [11, 36, 28, 42], allowed efficient approximate inference and learning of deep directed graphical models by maximizing a variational lower bound on the log-likelihood [38].",
      "startOffset" : 52,
      "endOffset" : 56
    }, {
      "referenceID" : 10,
      "context" : "Recent advances in stochastic variational inference [22] and amortized inference [11, 36, 28, 42], allowed efficient approximate inference and learning of deep directed graphical models by maximizing a variational lower bound on the log-likelihood [38].",
      "startOffset" : 81,
      "endOffset" : 97
    }, {
      "referenceID" : 34,
      "context" : "Recent advances in stochastic variational inference [22] and amortized inference [11, 36, 28, 42], allowed efficient approximate inference and learning of deep directed graphical models by maximizing a variational lower bound on the log-likelihood [38].",
      "startOffset" : 81,
      "endOffset" : 97
    }, {
      "referenceID" : 27,
      "context" : "Recent advances in stochastic variational inference [22] and amortized inference [11, 36, 28, 42], allowed efficient approximate inference and learning of deep directed graphical models by maximizing a variational lower bound on the log-likelihood [38].",
      "startOffset" : 81,
      "endOffset" : 97
    }, {
      "referenceID" : 40,
      "context" : "Recent advances in stochastic variational inference [22] and amortized inference [11, 36, 28, 42], allowed efficient approximate inference and learning of deep directed graphical models by maximizing a variational lower bound on the log-likelihood [38].",
      "startOffset" : 81,
      "endOffset" : 97
    }, {
      "referenceID" : 36,
      "context" : "Recent advances in stochastic variational inference [22] and amortized inference [11, 36, 28, 42], allowed efficient approximate inference and learning of deep directed graphical models by maximizing a variational lower bound on the log-likelihood [38].",
      "startOffset" : 248,
      "endOffset" : 252
    }, {
      "referenceID" : 27,
      "context" : "In particular, the variational autoencoder algorithm [28, 42] simultaneously learns a generative network, that maps gaussian latent variables z to samples x, and semantically meaningful features by exploiting the reparametrization trick [60].",
      "startOffset" : 53,
      "endOffset" : 61
    }, {
      "referenceID" : 40,
      "context" : "In particular, the variational autoencoder algorithm [28, 42] simultaneously learns a generative network, that maps gaussian latent variables z to samples x, and semantically meaningful features by exploiting the reparametrization trick [60].",
      "startOffset" : 53,
      "endOffset" : 61
    }, {
      "referenceID" : 58,
      "context" : "In particular, the variational autoencoder algorithm [28, 42] simultaneously learns a generative network, that maps gaussian latent variables z to samples x, and semantically meaningful features by exploiting the reparametrization trick [60].",
      "startOffset" : 237,
      "endOffset" : 241
    }, {
      "referenceID" : 42,
      "context" : "Its success in leveraging recent advances in backpropagation [44, 32] in deep neural networks resulted in its adoption for several applications ranging from speech synthesis [10] to language modeling [6].",
      "startOffset" : 61,
      "endOffset" : 69
    }, {
      "referenceID" : 31,
      "context" : "Its success in leveraging recent advances in backpropagation [44, 32] in deep neural networks resulted in its adoption for several applications ranging from speech synthesis [10] to language modeling [6].",
      "startOffset" : 61,
      "endOffset" : 69
    }, {
      "referenceID" : 9,
      "context" : "Its success in leveraging recent advances in backpropagation [44, 32] in deep neural networks resulted in its adoption for several applications ranging from speech synthesis [10] to language modeling [6].",
      "startOffset" : 174,
      "endOffset" : 178
    }, {
      "referenceID" : 5,
      "context" : "Its success in leveraging recent advances in backpropagation [44, 32] in deep neural networks resulted in its adoption for several applications ranging from speech synthesis [10] to language modeling [6].",
      "startOffset" : 200,
      "endOffset" : 203
    }, {
      "referenceID" : 33,
      "context" : "Still, the approximation in the inference process limits its ability to learn high dimensional deep representations, motivating recent work in improving approximate inference [35, 41, 48, 56, 8, 52].",
      "startOffset" : 175,
      "endOffset" : 198
    }, {
      "referenceID" : 39,
      "context" : "Still, the approximation in the inference process limits its ability to learn high dimensional deep representations, motivating recent work in improving approximate inference [35, 41, 48, 56, 8, 52].",
      "startOffset" : 175,
      "endOffset" : 198
    }, {
      "referenceID" : 46,
      "context" : "Still, the approximation in the inference process limits its ability to learn high dimensional deep representations, motivating recent work in improving approximate inference [35, 41, 48, 56, 8, 52].",
      "startOffset" : 175,
      "endOffset" : 198
    }, {
      "referenceID" : 54,
      "context" : "Still, the approximation in the inference process limits its ability to learn high dimensional deep representations, motivating recent work in improving approximate inference [35, 41, 48, 56, 8, 52].",
      "startOffset" : 175,
      "endOffset" : 198
    }, {
      "referenceID" : 7,
      "context" : "Still, the approximation in the inference process limits its ability to learn high dimensional deep representations, motivating recent work in improving approximate inference [35, 41, 48, 56, 8, 52].",
      "startOffset" : 175,
      "endOffset" : 198
    }, {
      "referenceID" : 50,
      "context" : "Still, the approximation in the inference process limits its ability to learn high dimensional deep representations, motivating recent work in improving approximate inference [35, 41, 48, 56, 8, 52].",
      "startOffset" : 175,
      "endOffset" : 198
    }, {
      "referenceID" : 14,
      "context" : "Autoregressive models [15, 30] can implement this strategy while typically retaining a great deal of flexibility.",
      "startOffset" : 22,
      "endOffset" : 30
    }, {
      "referenceID" : 29,
      "context" : "Autoregressive models [15, 30] can implement this strategy while typically retaining a great deal of flexibility.",
      "startOffset" : 22,
      "endOffset" : 30
    }, {
      "referenceID" : 42,
      "context" : "Recent work in this line of research have successfully taken advantage of recent advances in recurrent networks [44], in particular longshort term memory [21], and residual networks [20, 19] in order to learn state-of-the-art generative image models [54, 39] and language models [26].",
      "startOffset" : 112,
      "endOffset" : 116
    }, {
      "referenceID" : 20,
      "context" : "Recent work in this line of research have successfully taken advantage of recent advances in recurrent networks [44], in particular longshort term memory [21], and residual networks [20, 19] in order to learn state-of-the-art generative image models [54, 39] and language models [26].",
      "startOffset" : 154,
      "endOffset" : 158
    }, {
      "referenceID" : 19,
      "context" : "Recent work in this line of research have successfully taken advantage of recent advances in recurrent networks [44], in particular longshort term memory [21], and residual networks [20, 19] in order to learn state-of-the-art generative image models [54, 39] and language models [26].",
      "startOffset" : 182,
      "endOffset" : 190
    }, {
      "referenceID" : 18,
      "context" : "Recent work in this line of research have successfully taken advantage of recent advances in recurrent networks [44], in particular longshort term memory [21], and residual networks [20, 19] in order to learn state-of-the-art generative image models [54, 39] and language models [26].",
      "startOffset" : 182,
      "endOffset" : 190
    }, {
      "referenceID" : 52,
      "context" : "Recent work in this line of research have successfully taken advantage of recent advances in recurrent networks [44], in particular longshort term memory [21], and residual networks [20, 19] in order to learn state-of-the-art generative image models [54, 39] and language models [26].",
      "startOffset" : 250,
      "endOffset" : 258
    }, {
      "referenceID" : 37,
      "context" : "Recent work in this line of research have successfully taken advantage of recent advances in recurrent networks [44], in particular longshort term memory [21], and residual networks [20, 19] in order to learn state-of-the-art generative image models [54, 39] and language models [26].",
      "startOffset" : 250,
      "endOffset" : 258
    }, {
      "referenceID" : 25,
      "context" : "Recent work in this line of research have successfully taken advantage of recent advances in recurrent networks [44], in particular longshort term memory [21], and residual networks [20, 19] in order to learn state-of-the-art generative image models [54, 39] and language models [26].",
      "startOffset" : 279,
      "endOffset" : 283
    }, {
      "referenceID" : 57,
      "context" : "But the ordering of the dimensions, although often arbitrary, can be critical to the training of the model [59].",
      "startOffset" : 107,
      "endOffset" : 111
    }, {
      "referenceID" : 16,
      "context" : "Generative adversarial networks [17] on the other hand can train any differentiable generative network by avoiding the maximum likelihood principle altogether.",
      "startOffset" : 32,
      "endOffset" : 36
    }, {
      "referenceID" : 16,
      "context" : "Successfully trained GAN models [17, 12, 40] can consistently generate sharp and realistically looking samples [31].",
      "startOffset" : 32,
      "endOffset" : 44
    }, {
      "referenceID" : 11,
      "context" : "Successfully trained GAN models [17, 12, 40] can consistently generate sharp and realistically looking samples [31].",
      "startOffset" : 32,
      "endOffset" : 44
    }, {
      "referenceID" : 38,
      "context" : "Successfully trained GAN models [17, 12, 40] can consistently generate sharp and realistically looking samples [31].",
      "startOffset" : 32,
      "endOffset" : 44
    }, {
      "referenceID" : 30,
      "context" : "Successfully trained GAN models [17, 12, 40] can consistently generate sharp and realistically looking samples [31].",
      "startOffset" : 111,
      "endOffset" : 115
    }, {
      "referenceID" : 53,
      "context" : "However, metrics that measure the diversity in the generated samples are currently intractable [55, 18].",
      "startOffset" : 95,
      "endOffset" : 103
    }, {
      "referenceID" : 17,
      "context" : "However, metrics that measure the diversity in the generated samples are currently intractable [55, 18].",
      "startOffset" : 95,
      "endOffset" : 103
    }, {
      "referenceID" : 38,
      "context" : "Additionally, instability in their training process [40] requires careful hyperparameter tuning to avoid diverging behaviors.",
      "startOffset" : 52,
      "endOffset" : 56
    }, {
      "referenceID" : 3,
      "context" : "This formula has been mentioned in several papers including the maximum likelihood formulation of independent components analysis (ICA) [4, 23], gaussianization [9] and deep density models [43, 14, 3].",
      "startOffset" : 136,
      "endOffset" : 143
    }, {
      "referenceID" : 22,
      "context" : "This formula has been mentioned in several papers including the maximum likelihood formulation of independent components analysis (ICA) [4, 23], gaussianization [9] and deep density models [43, 14, 3].",
      "startOffset" : 136,
      "endOffset" : 143
    }, {
      "referenceID" : 8,
      "context" : "This formula has been mentioned in several papers including the maximum likelihood formulation of independent components analysis (ICA) [4, 23], gaussianization [9] and deep density models [43, 14, 3].",
      "startOffset" : 161,
      "endOffset" : 164
    }, {
      "referenceID" : 41,
      "context" : "This formula has been mentioned in several papers including the maximum likelihood formulation of independent components analysis (ICA) [4, 23], gaussianization [9] and deep density models [43, 14, 3].",
      "startOffset" : 189,
      "endOffset" : 200
    }, {
      "referenceID" : 13,
      "context" : "This formula has been mentioned in several papers including the maximum likelihood formulation of independent components analysis (ICA) [4, 23], gaussianization [9] and deep density models [43, 14, 3].",
      "startOffset" : 189,
      "endOffset" : 200
    }, {
      "referenceID" : 2,
      "context" : "This formula has been mentioned in several papers including the maximum likelihood formulation of independent components analysis (ICA) [4, 23], gaussianization [9] and deep density models [43, 14, 3].",
      "startOffset" : 189,
      "endOffset" : 200
    }, {
      "referenceID" : 56,
      "context" : "However, as a naive application of this formula is in general impractical for highdimensional data, ICA practitioners preferred to use more tractable principle like ensemble learning [58].",
      "startOffset" : 183,
      "endOffset" : 187
    }, {
      "referenceID" : 23,
      "context" : "As the existence proof of nonlinear ICA solutions [24] suggests, auto-regressive models can be seen as tractable instance of maximum likelihood nonlinear ICA, where the residual corresponds to the independent components.",
      "startOffset" : 50,
      "endOffset" : 54
    }, {
      "referenceID" : 13,
      "context" : "Building on our previous work in [14], we will define a powerful class of bijective functions which will enable exact and tractable density evaluation and exact and tractable inference.",
      "startOffset" : 33,
      "endOffset" : 37
    }, {
      "referenceID" : 30,
      "context" : "Moreover, the increased flexibility will allow us not to rely on a fixed form reconstruction cost such as square error [31, 40], and output sharper samples from trained models as a consequence.",
      "startOffset" : 119,
      "endOffset" : 127
    }, {
      "referenceID" : 38,
      "context" : "Moreover, the increased flexibility will allow us not to rely on a fixed form reconstruction cost such as square error [31, 40], and output sharper samples from trained models as a consequence.",
      "startOffset" : 119,
      "endOffset" : 127
    }, {
      "referenceID" : 24,
      "context" : "Also, this flexibility will help us leverage recent advances in batch normalization [25] and residual networks [19, 20].",
      "startOffset" : 84,
      "endOffset" : 88
    }, {
      "referenceID" : 18,
      "context" : "Also, this flexibility will help us leverage recent advances in batch normalization [25] and residual networks [19, 20].",
      "startOffset" : 111,
      "endOffset" : 119
    }, {
      "referenceID" : 19,
      "context" : "Also, this flexibility will help us leverage recent advances in batch normalization [25] and residual networks [19, 20].",
      "startOffset" : 111,
      "endOffset" : 119
    }, {
      "referenceID" : 12,
      "context" : "Exact samples from the resulting distribution can be generated by using the inverse transform sampling rule [13].",
      "startOffset" : 108,
      "endOffset" : 112
    }, {
      "referenceID" : 48,
      "context" : "For this reason we follow the design choice of [50] and factor out half of the dimensions at",
      "startOffset" : 47,
      "endOffset" : 51
    }, {
      "referenceID" : 44,
      "context" : "This follows a philosophy similar to guiding intermediate layers using intermediate classifiers [33], and having multiple layers of latent variables which represent different levels of abstraction [46, 42].",
      "startOffset" : 197,
      "endOffset" : 205
    }, {
      "referenceID" : 40,
      "context" : "This follows a philosophy similar to guiding intermediate layers using intermediate classifiers [33], and having multiple layers of latent variables which represent different levels of abstraction [46, 42].",
      "startOffset" : 197,
      "endOffset" : 205
    }, {
      "referenceID" : 18,
      "context" : "To further improve the propagation of training signal, we use deep residual networks [19, 20] with batch normalization [25] and weight normalization [2, 47] in m and l.",
      "startOffset" : 85,
      "endOffset" : 93
    }, {
      "referenceID" : 19,
      "context" : "To further improve the propagation of training signal, we use deep residual networks [19, 20] with batch normalization [25] and weight normalization [2, 47] in m and l.",
      "startOffset" : 85,
      "endOffset" : 93
    }, {
      "referenceID" : 24,
      "context" : "To further improve the propagation of training signal, we use deep residual networks [19, 20] with batch normalization [25] and weight normalization [2, 47] in m and l.",
      "startOffset" : 119,
      "endOffset" : 123
    }, {
      "referenceID" : 1,
      "context" : "To further improve the propagation of training signal, we use deep residual networks [19, 20] with batch normalization [25] and weight normalization [2, 47] in m and l.",
      "startOffset" : 149,
      "endOffset" : 156
    }, {
      "referenceID" : 45,
      "context" : "To further improve the propagation of training signal, we use deep residual networks [19, 20] with batch normalization [25] and weight normalization [2, 47] in m and l.",
      "startOffset" : 149,
      "endOffset" : 156
    }, {
      "referenceID" : 35,
      "context" : "This form of batch normalization can be seen as similar to reward normalization in deep reinforcement learning [37].",
      "startOffset" : 111,
      "endOffset" : 115
    }, {
      "referenceID" : 55,
      "context" : "For examples, the pixel values of an image typically lie in [0, 256] after application of the recommended jittering procedure [57, 55].",
      "startOffset" : 126,
      "endOffset" : 134
    }, {
      "referenceID" : 53,
      "context" : "For examples, the pixel values of an image typically lie in [0, 256] after application of the recommended jittering procedure [57, 55].",
      "startOffset" : 126,
      "endOffset" : 134
    }, {
      "referenceID" : 28,
      "context" : "We train our model on four natural image datasets: CIFAR-10 [29], Imagenet [45], Large-scale Scene Understanding (LSUN) [62], CelebFaces Attributes (CelebA) [34].",
      "startOffset" : 60,
      "endOffset" : 64
    }, {
      "referenceID" : 43,
      "context" : "We train our model on four natural image datasets: CIFAR-10 [29], Imagenet [45], Large-scale Scene Understanding (LSUN) [62], CelebFaces Attributes (CelebA) [34].",
      "startOffset" : 75,
      "endOffset" : 79
    }, {
      "referenceID" : 60,
      "context" : "We train our model on four natural image datasets: CIFAR-10 [29], Imagenet [45], Large-scale Scene Understanding (LSUN) [62], CelebFaces Attributes (CelebA) [34].",
      "startOffset" : 120,
      "endOffset" : 124
    }, {
      "referenceID" : 32,
      "context" : "We train our model on four natural image datasets: CIFAR-10 [29], Imagenet [45], Large-scale Scene Understanding (LSUN) [62], CelebFaces Attributes (CelebA) [34].",
      "startOffset" : 157,
      "endOffset" : 161
    }, {
      "referenceID" : 37,
      "context" : "More specifically, we train on the downsampled to 32× 32 and 64× 64 versions of Imagenet [39].",
      "startOffset" : 89,
      "endOffset" : 93
    }, {
      "referenceID" : 38,
      "context" : "The procedure for LSUN is the same as in [40]: we downsample the image so that the smallest side is 96 pixels and take random crops of 64× 64.",
      "startOffset" : 41,
      "endOffset" : 45
    }, {
      "referenceID" : 30,
      "context" : "For CelebA, we use the same procedure as in [31].",
      "startOffset" : 44,
      "endOffset" : 48
    }, {
      "referenceID" : 37,
      "context" : "6 and use deep convolutional residual networks in the coupling layers with skip-connections as suggested by [39].",
      "startOffset" : 108,
      "endOffset" : 112
    }, {
      "referenceID" : 26,
      "context" : "We optimize with ADAM [27] with default hyperparameters.",
      "startOffset" : 22,
      "endOffset" : 26
    }, {
      "referenceID" : 37,
      "context" : "Dataset CIFAR-10 Imagenet (32× 32) Imagenet (64× 64) Pixel RNN [39] 3.",
      "startOffset" : 63,
      "endOffset" : 67
    }, {
      "referenceID" : 37,
      "context" : "We show in Table 1 that the number of bits per dimension, while not improving over the Pixel RNN [39] baseline, is competitive with other generative methods.",
      "startOffset" : 97,
      "endOffset" : 101
    }, {
      "referenceID" : 53,
      "context" : "As mentioned in [55, 18], maximum likelihood is a principle that values diversity over sample quality in a limited capacity setting.",
      "startOffset" : 16,
      "endOffset" : 24
    }, {
      "referenceID" : 17,
      "context" : "As mentioned in [55, 18], maximum likelihood is a principle that values diversity over sample quality in a limited capacity setting.",
      "startOffset" : 16,
      "endOffset" : 24
    }, {
      "referenceID" : 59,
      "context" : "Many avenues exist to further improve the functional form of the transformations, for instance by exploiting the latest advances in dilated convolutions [61] and residual networks architectures [53] This paper presented a technique bridging the gap between auto-regressive models, variational autoencoders, and generative adversarial networks.",
      "startOffset" : 153,
      "endOffset" : 157
    }, {
      "referenceID" : 51,
      "context" : "Many avenues exist to further improve the functional form of the transformations, for instance by exploiting the latest advances in dilated convolutions [61] and residual networks architectures [53] This paper presented a technique bridging the gap between auto-regressive models, variational autoencoders, and generative adversarial networks.",
      "startOffset" : 194,
      "endOffset" : 198
    }, {
      "referenceID" : 30,
      "context" : "For variational autoencoders, these transformations could be used both to design more interesting reconstruction cost [31] and to augment stochastic inference models [41].",
      "startOffset" : 118,
      "endOffset" : 122
    }, {
      "referenceID" : 39,
      "context" : "For variational autoencoders, these transformations could be used both to design more interesting reconstruction cost [31] and to augment stochastic inference models [41].",
      "startOffset" : 166,
      "endOffset" : 170
    }, {
      "referenceID" : 0,
      "context" : "The authors thank the developers of Tensorflow [1].",
      "startOffset" : 47,
      "endOffset" : 50
    } ],
    "year" : 2016,
    "abstractText" : "Unsupervised learning of probabilistic models is a central yet challenging problem in machine learning. Specifically, designing models with tractable learning, sampling, inference and evaluation is crucial in solving this task. We extend the space of such models using real-valued non-volume preserving (real NVP) transformations, a set of powerful invertible and learnable transformations, resulting in an unsupervised learning algorithm with exact log-likelihood computation, exact sampling, exact inference of latent variables, and an interpretable latent space. We demonstrate its ability to model natural images on four datasets through sampling, log-likelihood evaluation and latent variable manipulations.",
    "creator" : "LaTeX with hyperref package"
  }
}