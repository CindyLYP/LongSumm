<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/cindy/tmp/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Cuckoo Search via Lévy Flights</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xin-She</forename><surname>Yang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Engineering</orgName>
								<orgName type="institution">University of Cambridge</orgName>
								<address>
									<addrLine>Trumpinton Street</addrLine>
									<postCode>CB2 1PZ</postCode>
									<settlement>Cambridge</settlement>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Suash</forename><surname>Deb</surname></persName>
							<email>suashdeb@gmail.com</email>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science &amp; Engineering C. V. Raman College of Engineering Bidyanagar, Mahura</orgName>
								<address>
									<postCode>752054</postCode>
									<region>Janla Bhubaneswar</region>
									<country key="IN">INDIA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Cuckoo Search via Lévy Flights</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-01-31T12:42+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>algorithm</term>
					<term>cuckoo search</term>
					<term>Lévy flight</term>
					<term>metaheuristics</term>
					<term>nature-inspired strategy</term>
					<term>optimization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>In this paper, we intend to formulate a new metaheuristic algorithm, called Cuckoo Search (CS), for solving optimization problems. This algorithm is based on the obligate brood parasitic behaviour of some cuckoo species in combination with the Lévy flight behaviour of some birds and fruit flies. We validate the proposed algorithm against test functions and then compare its performance with those of genetic algorithms and particle swarm optimization. Finally, we discuss the implication of the results and suggestion for further research.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>More and more modern metaheuristic algorithms inspired by nature are emerging and they become increasingly popular. For example, particles swarm optimization (PSO) was inspired by fish and bird swarm intelligence, while the Firefly Algorithm was inspired by the flashing pattern of tropical fireflies <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b21">[22]</ref>. These nature-inspired metaheuristic algorithms have been used in a wide range of optimization problems, including NP-hard problems such as the travelling salesman problem <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b20">[21]</ref>.</p><p>The power of almost all modern metaheuristics comes from the fact that they imitate the best feature in nature, especially biological systems evolved from natural selection over millions of years. Two important characteristics are selection of the fittest and adaptation to the environment. Numerically speaking, these can be translated into two crucial characteristics of the modern metaheuristics: intensification and diversification <ref type="bibr" target="#b2">[3]</ref>. Intensification intends to search around the current best solutions and select the best candidates or solutions, while diversification makes sure the algorithm can explore the search space efficiently.</p><p>This paper aims to formulate a new algorithm, called Cuckoo Search (CS), based on the interesting breeding bebaviour such as brood parasitism of certain species of cuckoos. We will first introduce the breeding bebaviour of cuckoos and the characteristics of Lévy flights of some birds and fruit flies, and then formulate the new CS, followed by its implementation. Finally, we will compare the proposed search strategy with other popular optimization algorithms and discuss our findings and their implications for various optimization problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. CUCKOO BEHAVIOUR AND LÉVY FLIGHTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Cuckoo Breeding Behaviour</head><p>Cuckoo are fascinating birds, not only because of the beautiful sounds they can make, but also because of their aggressive reproduction strategy. Some species such as the ani and Guira cuckoos lay their eggs in communal nests, though they may remove others' eggs to increase the hatching probability of their own eggs <ref type="bibr" target="#b11">[12]</ref>. Quite a number of species engage the obligate brood parasitism by laying their eggs in the nests of other host birds (often other species). There are three basic types of brood parasitism: intraspecific brood parasitism, cooperative breeding, and nest takeover. Some host birds can engage direct conflict with the intruding cuckoos. If a host bird discovers the eggs are not their owns, they will either throw these alien eggs away or simply abandon its nest and build a new nest elsewhere. Some cuckoo species such as the New World brood-parasitic Tapera have evolved in such a way that female parasitic cuckoos are often very specialized in the mimicry in colour and pattern of the eggs of a few chosen host species <ref type="bibr" target="#b11">[12]</ref>. This reduces the probability of their eggs being abandoned and thus increases their reproductivity.</p><p>In addition, the timing of egg-laying of some species is also amazing. Parasitic cuckoos often choose a nest where the host bird just laid its own eggs. In general, the cuckoo eggs hatch slightly earlier than their host eggs. Once the first cuckoo chick is hatched, the first instinct action it will take is to evict the host eggs by blindly propelling the eggs out of the nest, which increases the cuckoo chick's share of food provided by its host bird. Studies also show that a cuckoo chick can also mimic the call of host chicks to gain access to more feeding opportunity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Lévy Flights</head><p>On the other hand, various studies have shown that flight behaviour of many animals and insects has demonstrated the typical characteristics of Lévy flights <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b14">[15]</ref>, <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b13">[14]</ref>. A recent study by Reynolds and Frye shows that fruit flies or Drosophila melanogaster, explore their landscape using a series of straight flight paths punctuated by a sudden 90 o turn, leading to a Lévy-flight-style intermittent scale free search pattern. Studies on human behaviour such as the Ju/'hoansi hunter-gatherer foraging patterns also show the typical feature of Lévy flights. Even light can be related to Lévy flights <ref type="bibr" target="#b0">[1]</ref>. 978-1-4244-5612-3/09/$26.00 c IEEE  Subsequently, such behaviour has been applied to optimization and optimal search, and preliminary results show its promising capability <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b14">[15]</ref>, <ref type="bibr" target="#b18">[19]</ref>, <ref type="bibr" target="#b19">[20]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. CUCKOO SEARCH</head><p>For simplicity in describing our new Cuckoo Search, we now use the following three idealized rules: 1) Each cuckoo lays one egg at a time, and dump its egg in randomly chosen nest; 2) The best nests with high quality of eggs will carry over to the next generations; 3) The number of available host nests is fixed, and the egg laid by a cuckoo is discovered by the host bird with a probability p a ∈ [0, 1]. In this case, the host bird can either throw the egg away or abandon the nest, and build a completely new nest. For simplicity, this last assumption can be approximated by the fraction p a of the n nests are replaced by new nests (with new random solutions).</p><p>For a maximization problem, the quality or fitness of a solution can simply be proportional to the value of the objective function. Other forms of fitness can be defined in a similar way to the fitness function in genetic algorithms. For simplicity, we can use the following simple representations that each egg in a nest represents a solution, and a cuckoo egg represent a new solution, the aim is to use the new and potentially better solutions (cuckoos) to replace a not-so-good solution in the nests. Of course, this algorithm can be extended to the more complicated case where each nest has multiple eggs representing a set of solutions. For this present work, we will use the simplest approach where each nest has only a single egg.</p><p>Based on these three rules, the basic steps of the Cuckoo Search (CS) can be summarized as the pseudo code shown in <ref type="figure" target="#fig_0">Fig. 1</ref>.</p><p>When generating new solutions x (t+1) for, say, a cuckoo i, a Lévy flight is performed</p><formula xml:id="formula_0">x (t+1) i = x (t) i + α ⊕ Lévy(λ),<label>(1)</label></formula><p>where α &gt; 0 is the step size which should be related to the scales of the problem of interests. In most cases, we can use α = 1. The above equation is essentially the stochastic equation for random walk. In general, a random walk is a Markov chain whose next status/location only depends on the current location (the first term in the above equation) and the transition probability (the second term). The product ⊕ means entrywise multiplications. This entrywise product is similar to those used in PSO, but here the random walk via Lévy flight is more efficient in exploring the search space as its step length is much longer in the long run. The Lévy flight essentially provides a random walk while the random step length is drawn from a Lévy distribution</p><formula xml:id="formula_1">Lévy ∼ u = t −λ , (1 &lt; λ ≤ 3),<label>(2)</label></formula><p>which has an infinite variance with an infinite mean. Here the steps essentially form a random walk process with a powerlaw step-length distribution with a heavy tail. Some of the new solutions should be generated by Lévy walk around the best solution obtained so far, this will speed up the local search. However, a substantial fraction of the new solutions should be generated by far field randomization and whose locations should be far enough from the current best solution, this will make sure the system will not be trapped in a local optimum. From a quick look, it seems that there is some similarity between CS and hill-climbing in combination with some large scale randomization. But there are some significant differences. Firstly, CS is a population-based algorithm, in a way similar to GA and PSO, but it uses some sort of elitism and/or selection similar to that used in harmony search. Secondly, the randomization is more efficient as the step length is heavytailed, and any large step is possible. Thirdly, the number of parameters to be tuned is less than GA and PSo, and thus it is potentially more generic to adapt to a wider class of optimization problems. In addition, each nest can represent a set of solutions, CS can thus be extended to the type of meta-population algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. IMPLEMENTATION AND NUMERICAL EXPERIMENTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Validation and Parameter Studies</head><p>After implementation, we have to validate the algorithm using test functions with analytical or known solutions. For example, one of the many test functions we have used is the bivariate Michaelwicz function From the figure, we can see that, as the optimum is approaching, most nests aggregate towards the global optimum. We also notice that the nests are also distributed at different (local) optima in the case of multimodal functions. This means that CS can find all the optima simultaneously if the number of nests are much higher than the number of local optima. This advantage may become more significant when dealing with multimodal and multiobjective optimization problems.</p><formula xml:id="formula_2">f (x, y) = − sin(x) sin 2m ( x 2 π ) − sin(y) sin 2m ( 2y 2 π ),<label>(3)</label></formula><p>We have also tried to vary the number of host nests (or the population size n) and the probability p a . We have used n = 5, 10, 15, 20, 50, 100, 150, 250, 500 and p a = 0, 0.01, 0.05, 0.1, 0.15, 0.2, 0.25, 0.4, 0.5. From our simulations, we found that n = 15 and p a = 0.25 are sufficient for most optimization problems. Results and analysis also imply that the convergence rate, to some extent, is not sensitive to the parameters used. This means that the fine adjustment is not needed for any given problems. Therefore, we will use fixed n = 15 and p a = 0.25 in the rest of the simulations, especially for the comparison studies presented in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Test Functions</head><p>There are many benchmark test functions in literature <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b15">[16]</ref>, and they are designed to test the performance of optimization algorithms. Any new optimization algorithm should also be validated and tested against these benchmark functions. In our simulations, we have used the following test functions.</p><p>De Jong's first function is essentially a sphere function</p><formula xml:id="formula_3">f (x) = d i=1 x 2 i , x i ∈ [−5.12, 5.12],<label>(4)</label></formula><p>whose global minimum f * = 0 occurs at x * = (0, 0, ..., 0).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Here d is the dimension.</head><p>Easom's test function is unimodal</p><formula xml:id="formula_4">f (x, y) = − cos(x) cos(y) exp[−(x − π) 2 − (y − π) 2 ],<label>(5)</label></formula><p>where</p><formula xml:id="formula_5">(x, y) ∈ [−100, 100] × [−100, 100].<label>(6)</label></formula><p>It has a global minimum of f * = −1 at (π, π) in a very small region. Shubert's bivariate function Griewangk's test function has many local minima</p><formula xml:id="formula_6">f (x, y) = − 5 i=1 i cos[(i + 1)x + 1] 5 i=1 cos[(i + 1)y + 1)],<label>(7)</label></formula><formula xml:id="formula_7">f (x) = 1 4000 d i=1 x 2 i − d i=1 cos( x i √ i ) + 1,<label>(8)</label></formula><p>but a single global mimimum f * = 0 at (0, 0, ..., 0) for all −600 ≤ x i ≤ 600 where i = 1, 2, ..., d.</p><p>Ackley's function is multimodal</p><formula xml:id="formula_8">f (x) = −20 exp − 0.2 d d i=1 x 2 i − exp[ 1 d d i=1 cos(2πx i )] + (20 + e),<label>(9)</label></formula><p>with a global minimum f * = 0 at x * = (0, 0, ..., 0) in the range of −32.768 ≤ x i ≤ 32.768 where i = 1, 2, ..., d.</p><p>The generalized Rosenbrock's function is given by</p><formula xml:id="formula_9">f (x) = d−1 i=1 (1 − x i ) 2 + 100(x i+1 − x 2 i ) 2 ,<label>(10)</label></formula><p>which has a minimum f (x * ) = 0 at x * = (1, 1, ..., 1). Schwefel's test function is also multimodal</p><formula xml:id="formula_10">f (x) = d i=1 − x i sin( |x i | ) , −500 ≤ x i ≤ 500,<label>(11)</label></formula><p>with a global minimum of f * = −418.9829d at x * i = 420.9687(i = 1, 2, ..., d).</p><p>Rastrigin's test function</p><formula xml:id="formula_11">f (x) = 10d + d i=1 [x 2 i − 10 cos(2πx i )],<label>(12)</label></formula><p>has a global minimum f * = 0 at (0, 0, ..., 0) in a hypercube −5.12 ≤ x i ≤ 5.12 where i = 1, 2, ..., d.</p><p>Michalewicz's test function has d! local optima</p><formula xml:id="formula_12">f (x) = − d i=1 sin(x i ) sin( ix 2 i π ) 2m</formula><p>, (m = 10),</p><p>where 0 ≤ x i ≤ π and i = 1, 2, ..., d. The global mimimum is f * ≈ −1.801 for d = 2, while f * ≈ −4.6877 for d = 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Comparison of CS with PSO and GA</head><p>Recent studies indicate that PSO algorithms can outperform genetic algorithms (GA) <ref type="bibr" target="#b7">[8]</ref> and other conventional algorithms for many optimization problems. This can partly be attributed to the broadcasting ability of the current best estimates which potentially gives better and quicker convergence towards the optimality. A general framework for evaluating statistical performance of evolutionary algorithms has been discussed in detail by Shilane et al. <ref type="bibr" target="#b17">[18]</ref>. Now we will compare the Cuckoo Search with PSO and genetic algorithms for various standard test functions. After implementing these algorithms using Matlab, we have carried out extensive simulations and each algorithm has been run at least 100 times so as to carry out meaningful statistical analysis. The algorithms stop when the variations of function values are less than a given tolerance ≤ 10 −5 . The results are summarized in the following tables (see <ref type="table">Tables 1 and 2)</ref> where the global optima are reached. The numbers are in the format: average number of evaluations (success rate), so 927 ± 105(100%) means that the average number (mean) of function evaluations is 927 with a standard deviation of 105. The success rate of finding the global optima for this algorithm is 100%.</p><p>of randomization and intensification, and less number of control parameters. As for any metaheuristic algorithm, a good balance of intensive local search strategy and an efficient exploration of the whole search space will usually lead to a more efficient algorithm. On the other hand, there are only two parameters in this algorithm, the population size n, and p a . Once n is fixed, p a essentially controls the elitism and the balance of the randomization and local search. Few parameters make an algorithm less complex and thus potentially more generic. Such observations deserve more systematic research and further elaboration in the future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. CONCLUSIONS</head><p>In this paper, we have formulated a new metaheuristic Cuckoo Search in combination with Lévy flights, based on the breeding strategy of some cuckoo species. The proposed algorithm has been validated and compared with other algorithms such as genetic algorithms and particle swarm optimization. Simulations and comparison show that CS is superior to these existing algorithms for multimodal objective functions. This is partly due to the fact that there are fewer parameters to be fine-tuned in CS than in PSO and genetic algorithms. In fact, apart from the population size n, there is essentially one parameter p a . Furthermore, our simulations also indicate that the convergence rate is insensitive to the parameter p a . This also means that we do not have to fine tune these parameters for a specific problem. Subsequently, CS is more generic and robust for many optimization problems, comparing with other metaheuristic algorithms.</p><p>This potentially powerful optimization strategy can easily be extended to study multiobjecitve optimization applications with various constraints, even to NP-hard problems. Further studies can focus on the sensitivity and parameter studies and their possible relationships with the convergence rate of the algorithm. Hybridization with other popular algorithms such as PSO will also be potentially fruitful.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Pseudo code of the Cuckoo Search (CS).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>where m = 10 Fig. 2 .Fig. 3 .</head><label>1023</label><figDesc>and (x, y) ∈ [0, 5] × [0, 5]. This function has a global minimum f * ≈ −1.8013 at (2.20319, 1.57049). The landscape of this funciton is shown in Fig. 2. This global optimum can easily be found using Cuckoo Search, and the results are shown in Fig. 3 where the final locations of the nests are also marked with • in the figure. Here we have used n = 15 nests, α = 1 and p a = 0.25. In most of our simulations, we have used n = 15 to 50. The landscaped of Michaelwicz's function. Search paths of nests using Cuckoo Search. The final locations of the nests are marked with • in the figure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>has 18 global minima in the region (x, y) ∈ [−10, 10] × [−10, 10]. The value of its global minima is f * = −186.7309.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Cuckoo Search via Lévy Flights begin Objective function f (x), x = (x1, ..., x d ) T Generate initial population of n host nests xi (i = 1, 2, ..., n) while (t &lt;MaxGeneration) or (stop criterion) Get a cuckoo randomly by Lévy flights evaluate its quality/fitness Fi Choose a nest among n (say, j) randomly</figDesc><table><row><cell>if (Fi &gt; Fj ),</cell></row><row><cell>replace j by the new solution;</cell></row><row><cell>end</cell></row><row><cell>A fraction (pa) of worse nests</cell></row><row><cell>are abandoned and new ones are built;</cell></row><row><cell>Keep the best solutions</cell></row><row><cell>(or nests with quality solutions);</cell></row><row><cell>Rank the solutions and find the current best</cell></row><row><cell>end while</cell></row><row><cell>Postprocess results and visualization</cell></row><row><cell>end</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2009">World Congress on Nature &amp; Biologically Inspired Computing (NaBIC 2009)</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2009">World Congress on Nature &amp; Biologically Inspired Computing (NaBIC 2009)</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2009">World Congress on Nature &amp; Biologically Inspired Computing (NaBIC 2009)</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2009">2009 World Congress on Nature &amp; Biologically Inspired Computing (NaBIC 2009)</note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We can see that the CS is much more efficient in finding the global optima with higher success rates. Each function evaluation is virtually instantaneous on modern personal computer. For example, the computing time for 10,000 evaluations on a 3GHz desktop is about 5 seconds.</p><p>For all the test functions, CS has outperformed both GA and PSO. The primary reasons are two folds: A fine balance </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A Lévy flight for light</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Barthelemy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bertolotti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Wiersma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">453</biblScope>
			<biblScope unit="page" from="495" to="498" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Swarm Intelligence: From Natural to Artificial Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Bonabeau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Theraulaz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Oxford University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Metaheuristics in combinatorial optimization: Overview and conceptural comparision</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Blum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Roli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput. Surv</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="268" to="308" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">S</forename><surname>Liebovitch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Glendon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Lévy flights in Dobe Ju/&apos;hoansi foraging patterns</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="129" to="138" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A study of test functions for optimization algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Chattopadhyay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Opt. Theory Appl</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="231" to="236" />
			<date type="published" when="1971" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Optimisation for Engineering Design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Deb</forename><forename type="middle">K</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<publisher>Prentice-Hall</publisher>
			<pubPlace>New Delhi</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Stability analysis of social foraging swarms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Gazi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">M</forename><surname>Passino</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Sys. Man. Cyber. Part B -Cybernetics</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="539" to="557" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Genetic Algorithms in Search, Optimisation and Machine Learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>Goldberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<publisher>Addison Wesley</publisher>
			<pubPlace>Reading, Mass</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">C</forename><surname>Eberhart</surname></persName>
		</author>
		<title level="m">Particle swarm optimization. Proc. of IEEE International Conference on Neural Networks</title>
		<meeting><address><addrLine>Piscataway, NJ</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="1942" to="1948" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Eberhart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shi</surname></persName>
		</author>
		<title level="m">Swarm intelligence</title>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Biomimicrt of Bacterial Foraging for Distributed Optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">M</forename><surname>Passino</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
			<publisher>University Press</publisher>
			<pubPlace>Princeton, New Jersey</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Payne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename><surname>Sorenson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Klitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">The</forename><surname>Cuckoos</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
			<publisher>Oxford University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Lévy flights, non-local search and simulated annealing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Pavlyukevich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Computational Physics</title>
		<imprint>
			<biblScope unit="volume">226</biblScope>
			<biblScope unit="page" from="1830" to="1844" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Cooling down Lévy flights</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Pavlyukevich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Phys. A:Math. Theor</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="12299" to="12313" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Free-flight odor tracking in Drosophila is consistent with an optimal intermittent scale-free search</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M</forename><surname>Reynolds</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Frye</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS One</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page">354</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A wide class of test functions for global optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Schoen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Global Optimization</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="133" to="137" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A note on the extended rosenrbock function</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">W</forename><surname>Shang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">H</forename><surname>Qiu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Evolutionary Computation</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="119" to="126" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A general framework for statistical performance comparison of evolutionary computation algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Shilane</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Martikainen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Dudoit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Ovaska</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences: an Int. Journal</title>
		<imprint>
			<biblScope unit="volume">178</biblScope>
			<biblScope unit="page" from="2870" to="2879" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Shlesinger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Zaslavsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Frisch</surname></persName>
		</author>
		<title level="m">Lévy Flights and Related Topics in Phyics</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Search research</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Shlesinger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">443</biblScope>
			<biblScope unit="page" from="281" to="282" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><forename type="middle">S</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature-Inspired Metaheuristic Algorithms</title>
		<imprint>
			<date type="published" when="2008" />
			<publisher>Luniver Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Biology-derived algorithms in engineering optimizaton</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><forename type="middle">S</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Bioinspired Algorithms and Applications</title>
		<editor>Olarius &amp; Zomaya</editor>
		<imprint>
			<publisher>Chapman &amp; Hall / CRC</publisher>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
