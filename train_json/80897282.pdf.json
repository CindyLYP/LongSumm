{
  "name" : "80897282.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "RECURRENT NEURAL NETWORK REGULARIZATION",
    "authors" : [ "Wojciech Zaremba" ],
    "emails" : [ "woj.zaremba@gmail.com", "ilyasu@google.com", "vinyals@google.com" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n40 9.\n23 29\nv5 [\ncs .N\nE ]\n1 9\nFe b\n20 15\n∗"
    }, {
      "heading" : "1 INTRODUCTION",
      "text" : "The Recurrent Neural Network (RNN) is neural sequence model that achieves state of the art performance on important tasks that include language modeling Mikolov (2012), speech recognition Graves et al. (2013), and machine translation Kalchbrenner & Blunsom (2013). It is known that successful applications of neural networks require good regularization. Unfortunately, dropout Srivastava (2013), the most powerful regularization method for feedforward neural networks, does not work well with RNNs. As a result, practical applications of RNNs often use models that are too small because large RNNs tend to overfit. Existing regularization methods give relatively small improvements for RNNs Graves (2013). In this work, we show that dropout, when correctly used, greatly reduces overfitting in LSTMs, and evaluate it on three different problems.\nThe code for this work can be found in https://github.com/wojzaremba/lstm."
    }, {
      "heading" : "2 RELATED WORK",
      "text" : "Dropout Srivastava (2013) is a recently introduced regularization method that has been very successful with feed-forward neural networks. While much work has extended dropout in various ways Wang & Manning (2013); Wan et al. (2013), there has been relatively little research in applying it to RNNs. The only paper on this topic is by Bayer et al. (2013), who focuses on “marginalized dropout” Wang & Manning (2013), a noiseless deterministic approximation to standard dropout. Bayer et al. (2013) claim that conventional dropout does not work well with RNNs because the recurrence amplifies noise, which in turn hurts learning. In this work, we show that this problem can be fixed by applying dropout to a certain subset of the RNNs’ connections. As a result, RNNs can now also benefit from dropout.\nIndependently of our work, Pham et al. (2013) developed the very same RNN regularization method and applied it to handwriting recognition. We rediscovered this method and demonstrated strong empirical results over a wide range of problems. Other work that applied dropout to LSTMs is Pachitariu & Sahani (2013).\n∗Work done while the author was in Google Brain.\nThere have been a number of architectural variants of the RNN that perform better on problems with long term dependencies Hochreiter & Schmidhuber (1997); Graves et al. (2009); Cho et al. (2014); Jaeger et al. (2007); Koutnı́k et al. (2014); Sundermeyer et al. (2012). In this work, we show how to correctly apply dropout to LSTMs, the most commonly-used RNN variant; this way of applying dropout is likely to work well with other RNN architectures as well.\nIn this paper, we consider the following tasks: language modeling, speech recognition, and machine translation. Language modeling is the first task where RNNs have achieved substantial success Mikolov et al. (2010; 2011); Pascanu et al. (2013). RNNs have also been successfully used for speech recognition Robinson et al. (1996); Graves et al. (2013) and have recently been applied to machine translation, where they are used for language modeling, re-ranking, or phrase modeling Devlin et al. (2014); Kalchbrenner & Blunsom (2013); Cho et al. (2014); Chow et al. (1987); Mikolov et al. (2013)."
    }, {
      "heading" : "3 REGULARIZING RNNS WITH LSTM CELLS",
      "text" : "In this section we describe the deep LSTM (Section 3.1). Next, we show how to regularize them (Section 3.2), and explain why our regularization scheme works.\nWe let subscripts denote timesteps and superscripts denote layers. All our states are n-dimensional. Let hlt ∈ R\nn be a hidden state in layer l in timestep t. Moreover, let Tn,m : Rn → Rm be an affine transform (Wx+ b for some W and b). Let ⊙ be element-wise multiplication and let h0t be an input word vector at timestep k. We use the activations hLt to predict yt, since L is the number of layers in our deep LSTM."
    }, {
      "heading" : "3.1 LONG-SHORT TERM MEMORY UNITS",
      "text" : "The RNN dynamics can be described using deterministic transitions from previous to current hidden states. The deterministic state transition is a function\nRNN : hl−1t , h l t−1 → h l t\nFor classical RNNs, this function is given by\nhlt = f(Tn,nh l−1 t + Tn,nh l t−1), where f ∈ {sigm, tanh}\nThe LSTM has complicated dynamics that allow it to easily “memorize” information for an extended number of timesteps. The “long term” memory is stored in a vector of memory cells clt ∈ R\nn. Although many LSTM architectures that differ in their connectivity structure and activation functions, all LSTM architectures have explicit memory cells for storing information for long periods of time. The LSTM can decide to overwrite the memory cell, retrieve it, or keep it for the next time step. The LSTM architecture used in our experiments is given by the following equations Graves et al. (2013):\nLSTM : hl−1t , h l t−1, c l t−1 → h l t, c l t \n  i f o g\n\n  =\n\n  sigm sigm sigm tanh\n\n  T2n,4n\n(\nhl−1t hlt−1\n)\nclt = f ⊙ c l t−1 + i⊙ g\nhlt = o⊙ tanh(c l t)\nIn these equations, sigm and tanh are applied element-wise. Figure 1 illustrates the LSTM equations."
    }, {
      "heading" : "3.2 REGULARIZATION WITH DROPOUT",
      "text" : "The main contribution of this paper is a recipe for applying dropout to LSTMs in a way that successfully reduces overfitting. The main idea is to apply the dropout operator only to the non-recurrent\nconnections (Figure 2). The following equation describes it more precisely, where D is the dropout operator that sets a random subset of its argument to zero:\n\n  i f o g\n\n  =\n\n  sigm sigm sigm tanh\n\n  T2n,4n\n(\nD(hl−1t ) hlt−1\n)\nclt = f ⊙ c l t−1 + i⊙ g\nhlt = o⊙ tanh(c l t)\nOur method works as follows. The dropout operator corrupts the information carried by the units, forcing them to perform their intermediate computations more robustly. At the same time, we do not want to erase all the information from the units. It is especially important that the units remember events that occurred many timesteps in the past. Figure 3 shows how information could flow from an event that occurred at timestep t− 2 to the prediction in timestep t+ 2 in our implementation of dropout. We can see that the information is corrupted by the dropout operator exactly L + 1 times,\nthe meaning of life is that only if an end would be of the whole supplier. widespread rules are regarded as the companies of refuses to deliver. in balance of the nation ’s information and loan growth associated with the carrier thrifts are in the process of slowing the seed and commercial paper.\nthe meaning of life is nearly in the first several months before the government was addressing such a move as president and chief executive of the nation past from a national commitment to curb grounds. meanwhile the government invests overcapacity that criticism and in the outer reversal of small-town america.\nFigure 4: Some interesting samples drawn from a large regularized model conditioned on “The meaning of life is”. We have removed “unk”, “N”, “$” from the set of permissible words.\nand this number is independent of the number of timesteps traversed by the information. Standard dropout perturbs the recurrent connections, which makes it difficult for the LSTM to learn to store information for long periods of time. By not using dropout on the recurrent connections, the LSTM can benefit from dropout regularization without sacrificing its valuable memorization ability."
    }, {
      "heading" : "4 EXPERIMENTS",
      "text" : "We present results in three domains: language modeling (Section 4.1), speech recognition (Section 4.2), machine translation (Section 4.3), and image caption generation (Section 4.4)."
    }, {
      "heading" : "4.1 LANGUAGE MODELING",
      "text" : "We conducted word-level prediction experiments on the Penn Tree Bank (PTB) dataset Marcus et al. (1993), which consists of 929k training words, 73k validation words, and 82k test words. It has 10k words in its vocabulary. We downloaded it from Tomas Mikolov’s webpage†. We trained regularized LSTMs of two sizes; these are denoted the medium LSTM and large LSTM. Both LSTMs have two layers and are unrolled for 35 steps. We initialize the hidden states to zero. We then use the final hidden states of the current minibatch as the initial hidden state of the subsequent minibatch (successive minibatches sequentially traverse the training set). The size of each minibatch is 20.\n†http://www.fit.vutbr.cz/˜imikolov/rnnlm/simple-examples.tgz\nThe medium LSTM has 650 units per layer and its parameters are initialized uniformly in [−0.05, 0.05]. As described earlier, we apply 50% dropout on the non-recurrent connections. We train the LSTM for 39 epochs with a learning rate of 1, and after 6 epochs we decrease it by a factor of 1.2 after each epoch. We clip the norm of the gradients (normalized by minibatch size) at 5. Training this network takes about half a day on an NVIDIA K20 GPU.\nThe large LSTM has 1500 units per layer and its parameters are initialized uniformly in [−0.04, 0.04]. We apply 65% dropout on the non-recurrent connections. We train the model for 55 epochs with a learning rate of 1; after 14 epochs we start to reduce the learning rate by a factor of 1.15 after each epoch. We clip the norm of the gradients (normalized by minibatch size) at 10 Mikolov et al. (2010). Training this network takes an entire day on an NVIDIA K20 GPU.\nFor comparison, we trained a non-regularized network. We optimized its parameters to get the best validation performance. The lack of regularization effectively constrains size of the network, forcing us to use small network because larger networks overfit. Our best performing non-regularized LSTM has two hidden layers with 200 units per layer, and its weights are initialized uniformly in [−0.1, 0.1]. We train it for 4 epochs with a learning rate of 1 and then we decrease the learning rate by a factor of 2 after each epoch, for a total of 13 training epochs. The size of each minibatch is 20, and we unroll the network for 20 steps. Training this network takes 2-3 hours on an NVIDIA K20 GPU.\nTable 1 compares previous results with our LSTMs, and Figure 4 shows samples drawn from a single large regularized LSTM."
    }, {
      "heading" : "4.2 SPEECH RECOGNITION",
      "text" : "Deep Neural Networks have been used for acoustic modeling for over half a century (see Bourlard & Morgan (1993) for a good review). Acoustic modeling is a key component in mapping acoustic signals to sequences of words, as it models p(st|X) where st is the phonetic state at time t and X is the acoustic observation. Recent work has shown that LSTMs can achieve excellent performance on acoustic modeling Sak et al. (2014), yet relatively small LSTMs (in terms of the number of their parameters) can easily overfit the training set. A useful metric for measuring the performance of acoustic models is frame accuracy, which is measured at each st for all timesteps t. Generally, this metric correlates with the actual metric of interest, the Word Error Rate (WER).\nSince computing the WER involves using a language model and tuning the decoding parameters for every change in the acoustic model, we decided to focus on frame accuracy in these experiments. Table 2 shows that dropout improves the frame accuracy of the LSTM. Not surprisingly, the training frame accuracy drops due to the noise added during training, but as is often the case with dropout, this yields models that generalize better to unseen data. Note that the test set is easier than the training set, as its accuracy is higher. We report the performance of an LSTM on an internal Google Icelandic Speech dataset, which is relatively small (93k utterances), so overfitting is a great concern."
    }, {
      "heading" : "4.3 MACHINE TRANSLATION",
      "text" : "We formulate a machine translation problem as a language modelling task, where an LSTM is trained to assign high probability to a correct translation of a source sentence. Thus, the LSTM is trained on concatenations of source sentences and their translations Sutskever et al. (2014) (see also Cho et al. (2014)). We compute a translation by approximating the most probable sequence of words using a simple beam search with a beam of size 12. We ran an LSTM on the WMT’14 English to French dataset, on the “selected” subset from Schwenk (2014) which has 340M French words and 304M English words. Our LSTM has 4 hidden layers, and both its layers and word embeddings have 1000 units. Its English vocabulary has 160,000 words and its French vocabulary has 80,000 words. The optimal dropout probability was 0.2. Table 3 shows the performance of an LSTM trained with and without dropout. While our LSTM does not beat the phrase-based LIUM SMT system Schwenk et al. (2011), our results show that dropout improves the translation performance of the LSTM."
    }, {
      "heading" : "4.4 IMAGE CAPTION GENERATION",
      "text" : "We applied the dropout variant to the image caption generation model of Vinyals et al. (2014). The image caption generation is similar to the sequence-to-sequence model of Sutskever et al. (2014), but where the input image is mapped onto a vector with a highly-accurate pre-trained convolutional neural network (Szegedy et al., 2014), which is converted into a caption with a single-layer LSTM (see Vinyals et al. (2014) for the details on the architecture). We test our dropout scheme on LSTM as the convolutional neural network is not trained on the image caption dataset because it is not large (MSCOCO (Lin et al., 2014)).\nOur results are summarized in the following Table 4. In brief, dropout helps relative to not using dropout, but using an ensemble eliminates the gains attained by dropout. Thus, in this setting, the main effect of dropout is to produce a single model that is as good as an ensemble, which is a reasonable improvement given the simplicity of the technique."
    }, {
      "heading" : "5 CONCLUSION",
      "text" : "We presented a simple way of applying dropout to LSTMs that results in large performance increases on several problems in different domains. Our work makes dropout useful for RNNs, and our results suggest that our implementation of dropout could improve performance on a wide variety of applications."
    }, {
      "heading" : "6 ACKNOWLEDGMENTS",
      "text" : "We wish to acknowledge Tomas Mikolov for useful comments on the first version of the paper."
    } ],
    "references" : [ {
      "title" : "On fast dropout and its applicability to recurrent networks",
      "author" : [ "Bayer", "Justin", "Osendorfer", "Christian", "Chen", "Nutan", "Urban", "Sebastian", "van der Smagt", "Patrick" ],
      "venue" : "arXiv preprint arXiv:1311.0701,",
      "citeRegEx" : "Bayer et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Bayer et al\\.",
      "year" : 2013
    }, {
      "title" : "Connectionist Speech Recognition: A Hybrid Approach",
      "author" : [ "H. Bourlard", "N. Morgan" ],
      "venue" : "Kluwer Academic Publishers,",
      "citeRegEx" : "Bourlard and Morgan,? \\Q1993\\E",
      "shortCiteRegEx" : "Bourlard and Morgan",
      "year" : 1993
    }, {
      "title" : "Learning phrase representations using rnn encoder-decoder for statistical machine translation",
      "author" : [ "Cho", "Kyunghyun", "van Merrienboer", "Bart", "Gulcehre", "Caglar", "Bougares", "Fethi", "Schwenk", "Holger", "Bengio", "Yoshua" ],
      "venue" : "arXiv preprint arXiv:1406.1078,",
      "citeRegEx" : "Cho et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Cho et al\\.",
      "year" : 2014
    }, {
      "title" : "Byblos: The bbn continuous speech recognition system",
      "author" : [ "Y Chow", "M Dunham", "O Kimball", "M Krasner", "G Kubala", "J Makhoul", "P Price", "S Roucos", "R. Schwartz" ],
      "venue" : "In Acoustics, Speech, and Signal Processing, IEEE International Conference on ICASSP’87.,",
      "citeRegEx" : "Chow et al\\.,? \\Q1987\\E",
      "shortCiteRegEx" : "Chow et al\\.",
      "year" : 1987
    }, {
      "title" : "Fast and robust neural network joint models for statistical machine translation",
      "author" : [ "J. Devlin", "R. Zbib", "Z. Huang", "T. Lamar", "R. Schwartz", "J. Makhoul" ],
      "venue" : "In ACL,",
      "citeRegEx" : "Devlin et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Devlin et al\\.",
      "year" : 2014
    }, {
      "title" : "Generating sequences with recurrent neural networks",
      "author" : [ "Graves", "Alex" ],
      "venue" : "arXiv preprint arXiv:1308.0850,",
      "citeRegEx" : "Graves and Alex.,? \\Q2013\\E",
      "shortCiteRegEx" : "Graves and Alex.",
      "year" : 2013
    }, {
      "title" : "A novel connectionist system for unconstrained handwriting recognition",
      "author" : [ "Graves", "Alex", "Liwicki", "Marcus", "Fernández", "Santiago", "Bertolami", "Roman", "Bunke", "Horst", "Schmidhuber", "Jürgen" ],
      "venue" : "Pattern Analysis and Machine Intelligence, IEEE Transactions on,",
      "citeRegEx" : "Graves et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Graves et al\\.",
      "year" : 2009
    }, {
      "title" : "Speech recognition with deep recurrent neural networks",
      "author" : [ "Graves", "Alex", "Mohamed", "Abdel-rahman", "Hinton", "Geoffrey" ],
      "venue" : "In Acoustics, Speech and Signal Processing (ICASSP),",
      "citeRegEx" : "Graves et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Graves et al\\.",
      "year" : 2013
    }, {
      "title" : "Long short-term memory",
      "author" : [ "Hochreiter", "Sepp", "Schmidhuber", "Jürgen" ],
      "venue" : "Neural computation,",
      "citeRegEx" : "Hochreiter et al\\.,? \\Q1997\\E",
      "shortCiteRegEx" : "Hochreiter et al\\.",
      "year" : 1997
    }, {
      "title" : "Optimization and applications of echo state networks with leaky-integrator neurons",
      "author" : [ "Jaeger", "Herbert", "Lukoševičius", "Mantas", "Popovici", "Dan", "Siewert", "Udo" ],
      "venue" : "Neural Networks,",
      "citeRegEx" : "Jaeger et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "Jaeger et al\\.",
      "year" : 2007
    }, {
      "title" : "Recurrent continuous translation models",
      "author" : [ "N. Kalchbrenner", "P. Blunsom" ],
      "venue" : "In EMNLP,",
      "citeRegEx" : "Kalchbrenner and Blunsom,? \\Q2013\\E",
      "shortCiteRegEx" : "Kalchbrenner and Blunsom",
      "year" : 2013
    }, {
      "title" : "A clockwork rnn",
      "author" : [ "Koutnı́k", "Jan", "Greff", "Klaus", "Gomez", "Faustino", "Schmidhuber", "Jürgen" ],
      "venue" : "arXiv preprint arXiv:1402.3511,",
      "citeRegEx" : "Koutnı́k et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Koutnı́k et al\\.",
      "year" : 2014
    }, {
      "title" : "Microsoft coco: Common objects in context",
      "author" : [ "Lin", "Tsung-Yi", "Maire", "Michael", "Belongie", "Serge", "Hays", "James", "Perona", "Pietro", "Ramanan", "Deva", "Dollár", "Piotr", "Zitnick", "C Lawrence" ],
      "venue" : "arXiv preprint arXiv:1405.0312,",
      "citeRegEx" : "Lin et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Lin et al\\.",
      "year" : 2014
    }, {
      "title" : "Building a large annotated corpus of english: The penn treebank",
      "author" : [ "Marcus", "Mitchell P", "Marcinkiewicz", "Mary Ann", "Santorini", "Beatrice" ],
      "venue" : "Computational linguistics,",
      "citeRegEx" : "Marcus et al\\.,? \\Q1993\\E",
      "shortCiteRegEx" : "Marcus et al\\.",
      "year" : 1993
    }, {
      "title" : "Statistical language models based on neural networks",
      "author" : [ "Mikolov", "Tomáš" ],
      "venue" : "PhD thesis,",
      "citeRegEx" : "Mikolov and Tomáš.,? \\Q2012\\E",
      "shortCiteRegEx" : "Mikolov and Tomáš.",
      "year" : 2012
    }, {
      "title" : "Context dependent recurrent neural network language model",
      "author" : [ "Mikolov", "Tomas", "Zweig", "Geoffrey" ],
      "venue" : "In SLT,",
      "citeRegEx" : "Mikolov et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2012
    }, {
      "title" : "Recurrent neural network based language model",
      "author" : [ "Mikolov", "Tomas", "Karafiát", "Martin", "Burget", "Lukas", "Cernockỳ", "Jan", "Khudanpur", "Sanjeev" ],
      "venue" : "In INTERSPEECH,",
      "citeRegEx" : "Mikolov et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2010
    }, {
      "title" : "Strategies for training large scale neural network language models",
      "author" : [ "Mikolov", "Tomas", "Deoras", "Anoop", "Povey", "Daniel", "Burget", "Lukas", "Cernocky", "Jan" ],
      "venue" : "In Automatic Speech Recognition and Understanding (ASRU),",
      "citeRegEx" : "Mikolov et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2011
    }, {
      "title" : "Exploiting similarities among languages for machine translation",
      "author" : [ "Mikolov", "Tomas", "Le", "Quoc V", "Sutskever", "Ilya" ],
      "venue" : "arXiv preprint arXiv:1309.4168,",
      "citeRegEx" : "Mikolov et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2013
    }, {
      "title" : "Regularization and nonlinearities for neural language models: when are they needed",
      "author" : [ "Pachitariu", "Marius", "Sahani", "Maneesh" ],
      "venue" : "arXiv preprint arXiv:1301.5650,",
      "citeRegEx" : "Pachitariu et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Pachitariu et al\\.",
      "year" : 2013
    }, {
      "title" : "How to construct deep recurrent neural networks",
      "author" : [ "Pascanu", "Razvan", "Gulcehre", "Caglar", "Cho", "Kyunghyun", "Bengio", "Yoshua" ],
      "venue" : "arXiv preprint arXiv:1312.6026,",
      "citeRegEx" : "Pascanu et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Pascanu et al\\.",
      "year" : 2013
    }, {
      "title" : "Dropout improves recurrent neural networks for handwriting recognition",
      "author" : [ "Pham", "Vu", "Kermorvant", "Christopher", "Louradour", "Jérôme" ],
      "venue" : "arXiv preprint arXiv:1312.4569,",
      "citeRegEx" : "Pham et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Pham et al\\.",
      "year" : 2013
    }, {
      "title" : "The use of recurrent neural networks in continuous speech recognition",
      "author" : [ "Robinson", "Tony", "Hochberg", "Mike", "Renals", "Steve" ],
      "venue" : "In Automatic speech and speaker recognition,",
      "citeRegEx" : "Robinson et al\\.,? \\Q1996\\E",
      "shortCiteRegEx" : "Robinson et al\\.",
      "year" : 1996
    }, {
      "title" : "Sequence discriminative distributed training of long short-term memory recurrent neural networks",
      "author" : [ "H. Sak", "O. Vinyals", "G. Heigold", "A. Senior", "E. McDermott", "R. Monga", "M. Mao" ],
      "venue" : "In Interspeech,",
      "citeRegEx" : "Sak et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Sak et al\\.",
      "year" : 2014
    }, {
      "title" : "Lium’s smt machine translation systems for wmt",
      "author" : [ "Schwenk", "Holger" ],
      "venue" : "University le mans,",
      "citeRegEx" : "Schwenk and Holger.,? \\Q2014\\E",
      "shortCiteRegEx" : "Schwenk and Holger.",
      "year" : 2014
    }, {
      "title" : "Improving neural networks with dropout",
      "author" : [ "Srivastava", "Nitish" ],
      "venue" : "PhD thesis, University of Toronto,",
      "citeRegEx" : "Srivastava and Nitish.,? \\Q2013\\E",
      "shortCiteRegEx" : "Srivastava and Nitish.",
      "year" : 2013
    }, {
      "title" : "Lstm neural networks for language modeling",
      "author" : [ "Sundermeyer", "Martin", "Schlüter", "Ralf", "Ney", "Hermann" ],
      "venue" : "In INTERSPEECH,",
      "citeRegEx" : "Sundermeyer et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Sundermeyer et al\\.",
      "year" : 2012
    }, {
      "title" : "Sequence to sequence learning with neural networks",
      "author" : [ "Sutskever", "Ilya", "Vinyals", "Oriol", "Le", "Quoc VV" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Sutskever et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Sutskever et al\\.",
      "year" : 2014
    }, {
      "title" : "Going deeper with convolutions",
      "author" : [ "Szegedy", "Christian", "Liu", "Wei", "Jia", "Yangqing", "Sermanet", "Pierre", "Reed", "Scott", "Anguelov", "Dragomir", "Erhan", "Dumitru", "Vanhoucke", "Vincent", "Rabinovich", "Andrew" ],
      "venue" : "arXiv preprint arXiv:1409.4842,",
      "citeRegEx" : "Szegedy et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Szegedy et al\\.",
      "year" : 2014
    }, {
      "title" : "Show and tell: A neural image caption generator",
      "author" : [ "Vinyals", "Oriol", "Toshev", "Alexander", "Bengio", "Samy", "Erhan", "Dumitru" ],
      "venue" : "arXiv preprint arXiv:1411.4555,",
      "citeRegEx" : "Vinyals et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Vinyals et al\\.",
      "year" : 2014
    }, {
      "title" : "Regularization of neural networks using dropconnect",
      "author" : [ "Wan", "Li", "Zeiler", "Matthew", "Zhang", "Sixin", "Cun", "Yann L", "Fergus", "Rob" ],
      "venue" : "In Proceedings of the 30th International Conference on Machine Learning",
      "citeRegEx" : "Wan et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Wan et al\\.",
      "year" : 2013
    }, {
      "title" : "Fast dropout training",
      "author" : [ "Wang", "Sida", "Manning", "Christopher" ],
      "venue" : "In Proceedings of the 30th International Conference on Machine Learning",
      "citeRegEx" : "Wang et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Wang et al\\.",
      "year" : 2013
    } ],
    "referenceMentions" : [ {
      "referenceID" : 6,
      "context" : "1 INTRODUCTION The Recurrent Neural Network (RNN) is neural sequence model that achieves state of the art performance on important tasks that include language modeling Mikolov (2012), speech recognition Graves et al. (2013), and machine translation Kalchbrenner & Blunsom (2013).",
      "startOffset" : 203,
      "endOffset" : 224
    }, {
      "referenceID" : 6,
      "context" : "1 INTRODUCTION The Recurrent Neural Network (RNN) is neural sequence model that achieves state of the art performance on important tasks that include language modeling Mikolov (2012), speech recognition Graves et al. (2013), and machine translation Kalchbrenner & Blunsom (2013). It is known that successful applications of neural networks require good regularization.",
      "startOffset" : 203,
      "endOffset" : 279
    }, {
      "referenceID" : 6,
      "context" : "1 INTRODUCTION The Recurrent Neural Network (RNN) is neural sequence model that achieves state of the art performance on important tasks that include language modeling Mikolov (2012), speech recognition Graves et al. (2013), and machine translation Kalchbrenner & Blunsom (2013). It is known that successful applications of neural networks require good regularization. Unfortunately, dropout Srivastava (2013), the most powerful regularization method for feedforward neural networks, does not work well with RNNs.",
      "startOffset" : 203,
      "endOffset" : 410
    }, {
      "referenceID" : 6,
      "context" : "1 INTRODUCTION The Recurrent Neural Network (RNN) is neural sequence model that achieves state of the art performance on important tasks that include language modeling Mikolov (2012), speech recognition Graves et al. (2013), and machine translation Kalchbrenner & Blunsom (2013). It is known that successful applications of neural networks require good regularization. Unfortunately, dropout Srivastava (2013), the most powerful regularization method for feedforward neural networks, does not work well with RNNs. As a result, practical applications of RNNs often use models that are too small because large RNNs tend to overfit. Existing regularization methods give relatively small improvements for RNNs Graves (2013). In this work, we show that dropout, when correctly used, greatly reduces overfitting in LSTMs, and evaluate it on three different problems.",
      "startOffset" : 203,
      "endOffset" : 720
    }, {
      "referenceID" : 28,
      "context" : "While much work has extended dropout in various ways Wang & Manning (2013); Wan et al. (2013), there has been relatively little research in applying it to RNNs.",
      "startOffset" : 76,
      "endOffset" : 94
    }, {
      "referenceID" : 0,
      "context" : "The only paper on this topic is by Bayer et al. (2013), who focuses on “marginalized dropout” Wang & Manning (2013), a noiseless deterministic approximation to standard dropout.",
      "startOffset" : 35,
      "endOffset" : 55
    }, {
      "referenceID" : 0,
      "context" : "The only paper on this topic is by Bayer et al. (2013), who focuses on “marginalized dropout” Wang & Manning (2013), a noiseless deterministic approximation to standard dropout.",
      "startOffset" : 35,
      "endOffset" : 116
    }, {
      "referenceID" : 0,
      "context" : "The only paper on this topic is by Bayer et al. (2013), who focuses on “marginalized dropout” Wang & Manning (2013), a noiseless deterministic approximation to standard dropout. Bayer et al. (2013) claim that conventional dropout does not work well with RNNs because the recurrence amplifies noise, which in turn hurts learning.",
      "startOffset" : 35,
      "endOffset" : 198
    }, {
      "referenceID" : 0,
      "context" : "The only paper on this topic is by Bayer et al. (2013), who focuses on “marginalized dropout” Wang & Manning (2013), a noiseless deterministic approximation to standard dropout. Bayer et al. (2013) claim that conventional dropout does not work well with RNNs because the recurrence amplifies noise, which in turn hurts learning. In this work, we show that this problem can be fixed by applying dropout to a certain subset of the RNNs’ connections. As a result, RNNs can now also benefit from dropout. Independently of our work, Pham et al. (2013) developed the very same RNN regularization method and applied it to handwriting recognition.",
      "startOffset" : 35,
      "endOffset" : 547
    }, {
      "referenceID" : 0,
      "context" : "The only paper on this topic is by Bayer et al. (2013), who focuses on “marginalized dropout” Wang & Manning (2013), a noiseless deterministic approximation to standard dropout. Bayer et al. (2013) claim that conventional dropout does not work well with RNNs because the recurrence amplifies noise, which in turn hurts learning. In this work, we show that this problem can be fixed by applying dropout to a certain subset of the RNNs’ connections. As a result, RNNs can now also benefit from dropout. Independently of our work, Pham et al. (2013) developed the very same RNN regularization method and applied it to handwriting recognition. We rediscovered this method and demonstrated strong empirical results over a wide range of problems. Other work that applied dropout to LSTMs is Pachitariu & Sahani (2013). Work done while the author was in Google Brain.",
      "startOffset" : 35,
      "endOffset" : 812
    }, {
      "referenceID" : 3,
      "context" : "There have been a number of architectural variants of the RNN that perform better on problems with long term dependencies Hochreiter & Schmidhuber (1997); Graves et al. (2009); Cho et al.",
      "startOffset" : 155,
      "endOffset" : 176
    }, {
      "referenceID" : 2,
      "context" : "(2009); Cho et al. (2014); Jaeger et al. (2007); Koutnı́k et al. (2014); Sundermeyer et al. (2012). In this work, we show how to correctly apply dropout to LSTMs, the most commonly-used RNN variant; this way of applying dropout is likely to work well with other RNN architectures as well.",
      "startOffset" : 8,
      "endOffset" : 99
    }, {
      "referenceID" : 2,
      "context" : "(2009); Cho et al. (2014); Jaeger et al. (2007); Koutnı́k et al. (2014); Sundermeyer et al. (2012). In this work, we show how to correctly apply dropout to LSTMs, the most commonly-used RNN variant; this way of applying dropout is likely to work well with other RNN architectures as well. In this paper, we consider the following tasks: language modeling, speech recognition, and machine translation. Language modeling is the first task where RNNs have achieved substantial success Mikolov et al. (2010; 2011); Pascanu et al. (2013). RNNs have also been successfully used for speech recognition Robinson et al.",
      "startOffset" : 8,
      "endOffset" : 533
    }, {
      "referenceID" : 2,
      "context" : "(2009); Cho et al. (2014); Jaeger et al. (2007); Koutnı́k et al. (2014); Sundermeyer et al. (2012). In this work, we show how to correctly apply dropout to LSTMs, the most commonly-used RNN variant; this way of applying dropout is likely to work well with other RNN architectures as well. In this paper, we consider the following tasks: language modeling, speech recognition, and machine translation. Language modeling is the first task where RNNs have achieved substantial success Mikolov et al. (2010; 2011); Pascanu et al. (2013). RNNs have also been successfully used for speech recognition Robinson et al. (1996); Graves et al. (2013) and have recently been applied to machine translation, where they are used for language modeling, re-ranking, or phrase modeling Devlin et al.",
      "startOffset" : 8,
      "endOffset" : 640
    }, {
      "referenceID" : 2,
      "context" : "(2009); Cho et al. (2014); Jaeger et al. (2007); Koutnı́k et al. (2014); Sundermeyer et al. (2012). In this work, we show how to correctly apply dropout to LSTMs, the most commonly-used RNN variant; this way of applying dropout is likely to work well with other RNN architectures as well. In this paper, we consider the following tasks: language modeling, speech recognition, and machine translation. Language modeling is the first task where RNNs have achieved substantial success Mikolov et al. (2010; 2011); Pascanu et al. (2013). RNNs have also been successfully used for speech recognition Robinson et al. (1996); Graves et al. (2013) and have recently been applied to machine translation, where they are used for language modeling, re-ranking, or phrase modeling Devlin et al. (2014); Kalchbrenner & Blunsom (2013); Cho et al.",
      "startOffset" : 8,
      "endOffset" : 790
    }, {
      "referenceID" : 2,
      "context" : "(2009); Cho et al. (2014); Jaeger et al. (2007); Koutnı́k et al. (2014); Sundermeyer et al. (2012). In this work, we show how to correctly apply dropout to LSTMs, the most commonly-used RNN variant; this way of applying dropout is likely to work well with other RNN architectures as well. In this paper, we consider the following tasks: language modeling, speech recognition, and machine translation. Language modeling is the first task where RNNs have achieved substantial success Mikolov et al. (2010; 2011); Pascanu et al. (2013). RNNs have also been successfully used for speech recognition Robinson et al. (1996); Graves et al. (2013) and have recently been applied to machine translation, where they are used for language modeling, re-ranking, or phrase modeling Devlin et al. (2014); Kalchbrenner & Blunsom (2013); Cho et al. (2014); Chow et al. (1987); Mikolov et al. (2013). 3 REGULARIZING RNNS WITH LSTM CELLS In this section we describe the deep LSTM (Section 3.",
      "startOffset" : 8,
      "endOffset" : 883
    }, {
      "referenceID" : 6,
      "context" : "The LSTM architecture used in our experiments is given by the following equations Graves et al. (2013): LSTM : h t , h l t−1, c l t−1 → h l t, c l t",
      "startOffset" : 82,
      "endOffset" : 103
    }, {
      "referenceID" : 13,
      "context" : "1 LANGUAGE MODELING We conducted word-level prediction experiments on the Penn Tree Bank (PTB) dataset Marcus et al. (1993), which consists of 929k training words, 73k validation words, and 82k test words.",
      "startOffset" : 103,
      "endOffset" : 124
    }, {
      "referenceID" : 20,
      "context" : "Model Validation set Test set A single model Pascanu et al. (2013) 107.",
      "startOffset" : 45,
      "endOffset" : 67
    }, {
      "referenceID" : 20,
      "context" : "Model Validation set Test set A single model Pascanu et al. (2013) 107.5 Cheng et al. 100.0 non-regularized LSTM 120.7 114.5 Medium regularized LSTM 86.2 82.7 Large regularized LSTM 82.2 78.4 Model averaging Mikolov (2012) 83.",
      "startOffset" : 45,
      "endOffset" : 223
    }, {
      "referenceID" : 20,
      "context" : "Model Validation set Test set A single model Pascanu et al. (2013) 107.5 Cheng et al. 100.0 non-regularized LSTM 120.7 114.5 Medium regularized LSTM 86.2 82.7 Large regularized LSTM 82.2 78.4 Model averaging Mikolov (2012) 83.5 Cheng et al. 80.6 2 non-regularized LSTMs 100.4 96.1 5 non-regularized LSTMs 87.9 84.1 10 non-regularized LSTMs 83.5 80.0 2 medium regularized LSTMs 80.6 77.0 5 medium regularized LSTMs 76.7 73.3 10 medium regularized LSTMs 75.2 72.0 2 large regularized LSTMs 76.9 73.6 10 large regularized LSTMs 72.8 69.5 38 large regularized LSTMs 71.9 68.7 Model averaging with dynamic RNNs and n-gram models Mikolov & Zweig (2012) 72.",
      "startOffset" : 45,
      "endOffset" : 647
    }, {
      "referenceID" : 15,
      "context" : "We clip the norm of the gradients (normalized by minibatch size) at 10 Mikolov et al. (2010). Training this network takes an entire day on an NVIDIA K20 GPU.",
      "startOffset" : 71,
      "endOffset" : 93
    }, {
      "referenceID" : 23,
      "context" : "Recent work has shown that LSTMs can achieve excellent performance on acoustic modeling Sak et al. (2014), yet relatively small LSTMs (in terms of the number of their parameters) can easily overfit the training set.",
      "startOffset" : 88,
      "endOffset" : 106
    }, {
      "referenceID" : 28,
      "context" : "(2014), but where the input image is mapped onto a vector with a highly-accurate pre-trained convolutional neural network (Szegedy et al., 2014), which is converted into a caption with a single-layer LSTM (see Vinyals et al.",
      "startOffset" : 122,
      "endOffset" : 144
    }, {
      "referenceID" : 12,
      "context" : "We test our dropout scheme on LSTM as the convolutional neural network is not trained on the image caption dataset because it is not large (MSCOCO (Lin et al., 2014)).",
      "startOffset" : 147,
      "endOffset" : 165
    }, {
      "referenceID" : 25,
      "context" : "Thus, the LSTM is trained on concatenations of source sentences and their translations Sutskever et al. (2014) (see also Cho et al.",
      "startOffset" : 87,
      "endOffset" : 111
    }, {
      "referenceID" : 2,
      "context" : "(2014) (see also Cho et al. (2014)). We compute a translation by approximating the most probable sequence of words using a simple beam search with a beam of size 12. We ran an LSTM on the WMT’14 English to French dataset, on the “selected” subset from Schwenk (2014) which has 340M French words and 304M English words.",
      "startOffset" : 17,
      "endOffset" : 267
    }, {
      "referenceID" : 2,
      "context" : "(2014) (see also Cho et al. (2014)). We compute a translation by approximating the most probable sequence of words using a simple beam search with a beam of size 12. We ran an LSTM on the WMT’14 English to French dataset, on the “selected” subset from Schwenk (2014) which has 340M French words and 304M English words. Our LSTM has 4 hidden layers, and both its layers and word embeddings have 1000 units. Its English vocabulary has 160,000 words and its French vocabulary has 80,000 words. The optimal dropout probability was 0.2. Table 3 shows the performance of an LSTM trained with and without dropout. While our LSTM does not beat the phrase-based LIUM SMT system Schwenk et al. (2011), our results show that dropout improves the translation performance of the LSTM.",
      "startOffset" : 17,
      "endOffset" : 691
    }, {
      "referenceID" : 2,
      "context" : "(2014) (see also Cho et al. (2014)). We compute a translation by approximating the most probable sequence of words using a simple beam search with a beam of size 12. We ran an LSTM on the WMT’14 English to French dataset, on the “selected” subset from Schwenk (2014) which has 340M French words and 304M English words. Our LSTM has 4 hidden layers, and both its layers and word embeddings have 1000 units. Its English vocabulary has 160,000 words and its French vocabulary has 80,000 words. The optimal dropout probability was 0.2. Table 3 shows the performance of an LSTM trained with and without dropout. While our LSTM does not beat the phrase-based LIUM SMT system Schwenk et al. (2011), our results show that dropout improves the translation performance of the LSTM. 4.4 IMAGE CAPTION GENERATION We applied the dropout variant to the image caption generation model of Vinyals et al. (2014). The image caption generation is similar to the sequence-to-sequence model of Sutskever et al.",
      "startOffset" : 17,
      "endOffset" : 895
    }, {
      "referenceID" : 2,
      "context" : "(2014) (see also Cho et al. (2014)). We compute a translation by approximating the most probable sequence of words using a simple beam search with a beam of size 12. We ran an LSTM on the WMT’14 English to French dataset, on the “selected” subset from Schwenk (2014) which has 340M French words and 304M English words. Our LSTM has 4 hidden layers, and both its layers and word embeddings have 1000 units. Its English vocabulary has 160,000 words and its French vocabulary has 80,000 words. The optimal dropout probability was 0.2. Table 3 shows the performance of an LSTM trained with and without dropout. While our LSTM does not beat the phrase-based LIUM SMT system Schwenk et al. (2011), our results show that dropout improves the translation performance of the LSTM. 4.4 IMAGE CAPTION GENERATION We applied the dropout variant to the image caption generation model of Vinyals et al. (2014). The image caption generation is similar to the sequence-to-sequence model of Sutskever et al. (2014), but where the input image is mapped onto a vector with a highly-accurate pre-trained convolutional neural network (Szegedy et al.",
      "startOffset" : 17,
      "endOffset" : 997
    }, {
      "referenceID" : 2,
      "context" : "(2014) (see also Cho et al. (2014)). We compute a translation by approximating the most probable sequence of words using a simple beam search with a beam of size 12. We ran an LSTM on the WMT’14 English to French dataset, on the “selected” subset from Schwenk (2014) which has 340M French words and 304M English words. Our LSTM has 4 hidden layers, and both its layers and word embeddings have 1000 units. Its English vocabulary has 160,000 words and its French vocabulary has 80,000 words. The optimal dropout probability was 0.2. Table 3 shows the performance of an LSTM trained with and without dropout. While our LSTM does not beat the phrase-based LIUM SMT system Schwenk et al. (2011), our results show that dropout improves the translation performance of the LSTM. 4.4 IMAGE CAPTION GENERATION We applied the dropout variant to the image caption generation model of Vinyals et al. (2014). The image caption generation is similar to the sequence-to-sequence model of Sutskever et al. (2014), but where the input image is mapped onto a vector with a highly-accurate pre-trained convolutional neural network (Szegedy et al., 2014), which is converted into a caption with a single-layer LSTM (see Vinyals et al. (2014) for the details on the architecture).",
      "startOffset" : 17,
      "endOffset" : 1222
    } ],
    "year" : 2015,
    "abstractText" : "We present a simple regularization technique for Recurrent Neural Networks (RNNs) with Long Short-Term Memory (LSTM) units. Dropout, the most successful technique for regularizing neural networks, does not work well with RNNs and LSTMs. In this paper, we show how to correctly apply dropout to LSTMs, and show that it substantially reduces overfitting on a variety of tasks. These tasks include language modeling, speech recognition, image caption generation, and machine translation.",
    "creator" : "LaTeX with hyperref package"
  }
}